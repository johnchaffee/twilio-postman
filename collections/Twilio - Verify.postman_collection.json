{
	"info": {
		"_postman_id": "5d23008b-8eac-456f-950c-6f5d7c8bc413",
		"name": "Twilio - Verify",
		"description": "This is the public Twilio REST API.\n\nContact Support:\n Name: Twilio Support\n Email: support@twilio.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1060316"
	},
	"item": [
		{
			"name": "Access Tokens",
			"item": [
				{
					"name": "Create Access Token",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Identity",
									"value": "qui officia ",
									"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, and generated by your external system, such as your user's UUID, GUID, or SID."
								},
								{
									"key": "FactorType",
									"value": "push",
									"description": "(Required) The Type of this Factor. Eg. `push`"
								},
								{
									"key": "FactorFriendlyName",
									"value": "magna eu",
									"description": "The friendly name of the factor that is going to be created with this access token",
									"disabled": true
								},
								{
									"key": "Ttl",
									"value": "-52206753",
									"description": "How long, in seconds, the access token is valid. Can be an integer between 60 and 300. Default is 60.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-AccessTokens-Url}}/v2/Services/:ServiceSid/AccessTokens",
							"host": [
								"{{v2-Services-ServiceSid-AccessTokens-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"AccessTokens"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								}
							]
						},
						"description": "Create a new enrollment Access Token for the Entity"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Identity",
											"value": "qui officia ",
											"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, and generated by your external system, such as your user's UUID, GUID, or SID."
										},
										{
											"key": "FactorType",
											"value": "push",
											"description": "(Required) The Type of this Factor. Eg. `push`"
										},
										{
											"key": "FactorFriendlyName",
											"value": "magna eu",
											"description": "The friendly name of the factor that is going to be created with this access token",
											"disabled": true
										},
										{
											"key": "Ttl",
											"value": "-52206753",
											"description": "How long, in seconds, the access token is valid. Can be an integer between 60 and 300. Default is 60.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-AccessTokens-Url}}/v2/Services/:ServiceSid/AccessTokens",
									"host": [
										"{{v2-Services-ServiceSid-AccessTokens-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"AccessTokens"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YK3B5EeC4ED0e03e4dD519e9F47e0A4Ec1\",\n  \"account_sid\": \"ACB1faD83D3C4c36ad9A4F0fdE89656BC2\",\n  \"service_sid\": \"VAEc9BfBDfbA5B3536bff02cb1Cc852d48\",\n  \"entity_identity\": \"ipsum ut est incididunt in\",\n  \"factor_type\": \"push\",\n  \"factor_friendly_name\": \"ea anim proident\",\n  \"token\": \"do nulla\",\n  \"url\": \"http://cvkNJbUrNrfyLDLYVFjljjKjLRgbfIi.izuGOSjNjWMr6Da8qoba3aVWkHPyjE4Ef+PcyEdlBNBAs2\",\n  \"ttl\": 83113090,\n  \"date_created\": \"2002-03-27T05:03:36.102Z\"\n}"
						}
					]
				},
				{
					"name": "Fetch Access Token",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-AccessTokens-Sid-Url}}/v2/Services/:ServiceSid/AccessTokens/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-AccessTokens-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"AccessTokens",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Sid",
									"value": "YKD1AccCE3625C7afd0ccE08Bb9cc20abE",
									"description": "(Required) A 34 character string that uniquely identifies this Access Token."
								}
							]
						},
						"description": "Fetch an Access Token for the Entity"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-AccessTokens-Sid-Url}}/v2/Services/:ServiceSid/AccessTokens/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-AccessTokens-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"AccessTokens",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Sid",
											"value": "YKD1AccCE3625C7afd0ccE08Bb9cc20abE",
											"description": "(Required) A 34 character string that uniquely identifies this Access Token."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YK3B5EeC4ED0e03e4dD519e9F47e0A4Ec1\",\n  \"account_sid\": \"ACB1faD83D3C4c36ad9A4F0fdE89656BC2\",\n  \"service_sid\": \"VAEc9BfBDfbA5B3536bff02cb1Cc852d48\",\n  \"entity_identity\": \"ipsum ut est incididunt in\",\n  \"factor_type\": \"push\",\n  \"factor_friendly_name\": \"ea anim proident\",\n  \"token\": \"do nulla\",\n  \"url\": \"http://cvkNJbUrNrfyLDLYVFjljjKjLRgbfIi.izuGOSjNjWMr6Da8qoba3aVWkHPyjE4Ef+PcyEdlBNBAs2\",\n  \"ttl\": 83113090,\n  \"date_created\": \"2002-03-27T05:03:36.102Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Buckets",
			"item": [
				{
					"name": "Create Bucket",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Max",
									"value": "-38023022",
									"description": "(Required) Maximum number of requests permitted in during the interval."
								},
								{
									"key": "Interval",
									"value": "-59347134",
									"description": "(Required) Number of seconds that the rate limit will be enforced over."
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":RateLimitSid",
								"Buckets"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "RateLimitSid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
								}
							]
						},
						"description": "Create a new Bucket for a Rate Limit"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Max",
											"value": "-38023022",
											"description": "(Required) Maximum number of requests permitted in during the interval."
										},
										{
											"key": "Interval",
											"value": "-59347134",
											"description": "(Required) Number of seconds that the rate limit will be enforced over."
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":RateLimitSid",
										"Buckets"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "RateLimitSid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"BLf2D1Ab9959fddDCdD15f9ADDdf552fA6\",\n  \"rate_limit_sid\": \"RKfa07ab4feFC7a823d99afcEf4Df8eAA0\",\n  \"service_sid\": \"VAB35D1C82e385Ecf6D3A81Dfdf8FF8f59\",\n  \"account_sid\": \"AC1afbbbE317409E4Fcc1D8d45a7519FbB\",\n  \"max\": -76658815,\n  \"interval\": 52593690,\n  \"date_created\": \"1967-08-01T14:15:37.177Z\",\n  \"date_updated\": \"2011-09-10T09:35:19.393Z\",\n  \"url\": \"https://HOTJipGIqXHgtvMBoT.ibp0Xi2rDiR+NhJbVUbeLIN1mnyPOqqtJccB7\"\n}"
						}
					]
				},
				{
					"name": "List Bucket",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":RateLimitSid",
								"Buckets"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "RateLimitSid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
								}
							]
						},
						"description": "Retrieve a list of all Buckets for a Rate Limit."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":RateLimitSid",
										"Buckets"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "RateLimitSid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"buckets\": [\n    {\n      \"sid\": \"BL6b3bAB250C2B5d08D8a54aadF287d00E\",\n      \"rate_limit_sid\": \"RKD925EeB8c49F5fCFb0BAD9F6d82b78e9\",\n      \"service_sid\": \"VAcBEaAaeb231Fbd3fc7215eC5b687fDcf\",\n      \"account_sid\": \"ACD5AEBccBeA2da0d87F4fbc6B98F1bCE5\",\n      \"max\": -62297505,\n      \"interval\": -97533111,\n      \"date_created\": \"2015-01-12T06:35:03.271Z\",\n      \"date_updated\": \"2021-09-15T12:26:34.389Z\",\n      \"url\": \"https://usMEcmeDLNLOgZHAWUaBOaQ.lxjX.92Pgdj\"\n    },\n    {\n      \"sid\": \"BL7cad8f250dB6A1fA0C26Ef5823BfDBa4\",\n      \"rate_limit_sid\": \"RKCDA7FF7DbdF0Ac2f4cb67dFCdF3687dE\",\n      \"service_sid\": \"VAc31Bb07f1cE6a3b43CDf37CBBfD676BF\",\n      \"account_sid\": \"ACadbcD0d03Ea92caD467AcD8F43D9263e\",\n      \"max\": -56324231,\n      \"interval\": 37677149,\n      \"date_created\": \"2008-04-07T21:34:02.139Z\",\n      \"date_updated\": \"2015-10-29T06:26:51.649Z\",\n      \"url\": \"https://wkicAyjnHPpWjKJPGQ.znOwtrGimme5ywpA8N\"\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://jOAGrTMWlIyLUJHoPXvuQXdfv.kgrDQ1poXc.l6O+xQ4HbnOc+TtIxgorxZqDcBJdzS8Y.yQMUQaVC\",\n    \"next_page_url\": \"http://mSvBgxHMKTzrRW.hudZoVW,MojyNJB.D.cLSauZj4\",\n    \"page\": -83125865,\n    \"page_size\": 70193859,\n    \"previous_page_url\": \"http://SZJOPzinQCzsJMXrXEMoWGjymJEM.ioedd+fIXIqCn.OY+cvDWQED.ZU1.q0aP6Vcgk\",\n    \"url\": \"http://ERcZGqASHRQnledyNtXzmbQWaEfm.khQWq6hre4M4K4ykyxvyDqVgFuc,kun20Xz4umPcekmgjZUGOjEz2jwYtSOV9U37J6G\",\n    \"key\": \"sunt\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Bucket",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Max",
									"value": "17265514",
									"description": "Maximum number of requests permitted in during the interval.",
									"disabled": true
								},
								{
									"key": "Interval",
									"value": "-4914195",
									"description": "Number of seconds that the rate limit will be enforced over.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":RateLimitSid",
								"Buckets",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "RateLimitSid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
								},
								{
									"key": "Sid",
									"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
									"description": "(Required) A 34 character string that uniquely identifies this Bucket."
								}
							]
						},
						"description": "Update a specific Bucket."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Max",
											"value": "17265514",
											"description": "Maximum number of requests permitted in during the interval.",
											"disabled": true
										},
										{
											"key": "Interval",
											"value": "-4914195",
											"description": "Number of seconds that the rate limit will be enforced over.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":RateLimitSid",
										"Buckets",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "RateLimitSid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
										},
										{
											"key": "Sid",
											"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
											"description": "(Required) A 34 character string that uniquely identifies this Bucket."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"BLf2D1Ab9959fddDCdD15f9ADDdf552fA6\",\n  \"rate_limit_sid\": \"RKfa07ab4feFC7a823d99afcEf4Df8eAA0\",\n  \"service_sid\": \"VAB35D1C82e385Ecf6D3A81Dfdf8FF8f59\",\n  \"account_sid\": \"AC1afbbbE317409E4Fcc1D8d45a7519FbB\",\n  \"max\": -76658815,\n  \"interval\": 52593690,\n  \"date_created\": \"1967-08-01T14:15:37.177Z\",\n  \"date_updated\": \"2011-09-10T09:35:19.393Z\",\n  \"url\": \"https://HOTJipGIqXHgtvMBoT.ibp0Xi2rDiR+NhJbVUbeLIN1mnyPOqqtJccB7\"\n}"
						}
					]
				},
				{
					"name": "Fetch Bucket",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":RateLimitSid",
								"Buckets",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "RateLimitSid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
								},
								{
									"key": "Sid",
									"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
									"description": "(Required) A 34 character string that uniquely identifies this Bucket."
								}
							]
						},
						"description": "Fetch a specific Bucket."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":RateLimitSid",
										"Buckets",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "RateLimitSid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
										},
										{
											"key": "Sid",
											"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
											"description": "(Required) A 34 character string that uniquely identifies this Bucket."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"BLf2D1Ab9959fddDCdD15f9ADDdf552fA6\",\n  \"rate_limit_sid\": \"RKfa07ab4feFC7a823d99afcEf4Df8eAA0\",\n  \"service_sid\": \"VAB35D1C82e385Ecf6D3A81Dfdf8FF8f59\",\n  \"account_sid\": \"AC1afbbbE317409E4Fcc1D8d45a7519FbB\",\n  \"max\": -76658815,\n  \"interval\": 52593690,\n  \"date_created\": \"1967-08-01T14:15:37.177Z\",\n  \"date_updated\": \"2011-09-10T09:35:19.393Z\",\n  \"url\": \"https://HOTJipGIqXHgtvMBoT.ibp0Xi2rDiR+NhJbVUbeLIN1mnyPOqqtJccB7\"\n}"
						}
					]
				},
				{
					"name": "Delete Bucket",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":RateLimitSid",
								"Buckets",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "RateLimitSid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
								},
								{
									"key": "Sid",
									"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
									"description": "(Required) A 34 character string that uniquely identifies this Bucket."
								}
							]
						},
						"description": "Delete a specific Bucket."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:RateLimitSid/Buckets/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":RateLimitSid",
										"Buckets",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "RateLimitSid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource."
										},
										{
											"key": "Sid",
											"value": "BLFCc64adBE8aB801E0Cf74cdDc0Bd4d7f",
											"description": "(Required) A 34 character string that uniquely identifies this Bucket."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Challenges",
			"item": [
				{
					"name": "Create Challenge",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FactorSid",
									"value": "YFad9b4B36e60B5fC7efEF071BC2dDaE5f",
									"description": "(Required) The unique SID identifier of the Factor."
								},
								{
									"key": "ExpirationDate",
									"value": "1986-06-04T16:57:15.140Z",
									"description": "The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.",
									"disabled": true
								},
								{
									"key": "Details.Message",
									"value": "id nisi",
									"description": "Shown to the user when the push notification arrives. Required when `factor_type` is `push`. Can be up to 256 characters in length",
									"disabled": true
								},
								{
									"key": "AuthPayload",
									"value": "incididunt nisi in elit",
									"description": "Optional payload used to verify the Challenge upon creation. Only used with a Factor of type `totp` to carry the TOTP code that needs to be verified. For `TOTP` this value must be between 3 and 8 characters long.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Challenges"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Create a new Challenge for the Factor"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FactorSid",
											"value": "YF4aBa0cF076B99B26bDE7Ae5b1FD9bca2",
											"description": "(Required) The unique SID identifier of the Factor."
										},
										{
											"key": "ExpirationDate",
											"value": "1954-04-20T08:56:27.120Z",
											"description": "The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.",
											"disabled": true
										},
										{
											"key": "Details.Message",
											"value": "officia veniam eu",
											"description": "Shown to the user when the push notification arrives. Required when `factor_type` is `push`. Can be up to 256 characters in length",
											"disabled": true
										},
										{
											"key": "AuthPayload",
											"value": "officia tempo",
											"description": "Optional payload used to verify the Challenge upon creation. Only used with a Factor of type `totp` to carry the TOTP code that needs to be verified. For `TOTP` this value must be between 3 and 8 characters long.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Challenges"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YC86B8cF6dC05CfB9DF34870eBFaB9A3Bf\",\n  \"account_sid\": \"AC3EC7CD1dDF2c68CDF5b86DaCf1EE76FC\",\n  \"service_sid\": \"VA3B1D4Dc8Fb736fed3EaB62F390B6Df5B\",\n  \"entity_sid\": \"YEb6719c9Bc02baFFBE9b0BaB945d49BbF\",\n  \"identity\": \"ipsum laborum irure\",\n  \"factor_sid\": \"YF9fC1FDEe7E2c4d38FCEB9aC54911bdCB\",\n  \"date_created\": \"2019-08-02T17:16:35.778Z\",\n  \"date_updated\": \"1963-09-17T07:09:35.348Z\",\n  \"date_responded\": \"2000-03-13T04:53:11.755Z\",\n  \"expiration_date\": \"2000-09-21T11:00:34.344Z\",\n  \"status\": \"approved\",\n  \"responded_reason\": \"not_requested\",\n  \"details\": {},\n  \"hidden_details\": {},\n  \"metadata\": {},\n  \"factor_type\": \"push\",\n  \"url\": \"http://AgTaSdz.doV,pkzn4IhcjIDpn,SIzLuBwLSE\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "List Challenge",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Challenges"
							],
							"query": [
								{
									"key": "FactorSid",
									"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
									"description": "The unique SID identifier of the Factor.",
									"disabled": true
								},
								{
									"key": "Status",
									"value": "pending",
									"description": "The Status of the Challenges to fetch. One of `pending`, `expired`, `approved` or `denied`.",
									"disabled": true
								},
								{
									"key": "Order",
									"value": "asc",
									"description": "The desired sort order of the Challenges list. One of `asc` or `desc` for ascending and descending respectively. Defaults to `asc`.",
									"disabled": true
								},
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Retrieve a list of all Challenges for a Factor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges?FactorSid=YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf&Status=<string>&Order=<string>&PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Challenges"
									],
									"query": [
										{
											"key": "FactorSid",
											"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf"
										},
										{
											"key": "Status",
											"value": "<string>"
										},
										{
											"key": "Order",
											"value": "<string>"
										},
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"challenges\": [\n    {\n      \"sid\": \"YC223AdeB31C0Fa02bff4CE6f31E45ad27\",\n      \"account_sid\": \"ACBd05a55919CAEec1E7Bc1C33903f6C17\",\n      \"service_sid\": \"VAc47EAc6C181C4Eb038D9f6c3cB442ADf\",\n      \"entity_sid\": \"YE72eFfC2AA4d9eA4434F31C2ef1ECFa03\",\n      \"identity\": \"est id consectetur eu\",\n      \"factor_sid\": \"YFa69B1d2AbFf42d62AC5C0fdaDEa7E4ba\",\n      \"date_created\": \"2000-09-20T07:39:31.967Z\",\n      \"date_updated\": \"1974-08-31T23:20:57.010Z\",\n      \"date_responded\": \"1978-02-20T14:29:22.842Z\",\n      \"expiration_date\": \"1973-12-06T09:53:15.977Z\",\n      \"status\": \"<string>\",\n      \"responded_reason\": \"none\",\n      \"details\": {},\n      \"hidden_details\": {},\n      \"metadata\": {},\n      \"factor_type\": \"push\",\n      \"url\": \"http://ITnnlQlOcUffptAyb.mmreWBfQLSJC67DF.hUWAID3l1Paqwz9Frb82t6-i.igNfgklvb.cSqDv1R0eWJO+MWR4aH.w5r2H5\",\n      \"links\": {}\n    },\n    {\n      \"sid\": \"YC5fc9dADCD9FcA70eC6005cB64613cCbd\",\n      \"account_sid\": \"AC0279b846863d4b60E5e693b2cb6357Fd\",\n      \"service_sid\": \"VA53b321Dcc88c8AC2F2e94e0769d7AfBC\",\n      \"entity_sid\": \"YEfEE14d3354f3ACffE35C95f1fedcdCba\",\n      \"identity\": \"incididunt tempor\",\n      \"factor_sid\": \"YFb8E2ACbc7dF3c4F66A55EA27f665d93D\",\n      \"date_created\": \"1997-04-15T06:49:33.481Z\",\n      \"date_updated\": \"1945-12-14T05:37:38.521Z\",\n      \"date_responded\": \"1951-04-20T14:47:05.024Z\",\n      \"expiration_date\": \"1995-05-02T10:58:12.234Z\",\n      \"status\": \"<string>\",\n      \"responded_reason\": \"not_requested\",\n      \"details\": {},\n      \"hidden_details\": {},\n      \"metadata\": {},\n      \"factor_type\": \"push\",\n      \"url\": \"http://XQSqoFydQaLYfqPeDYWpyRXYvtNybH.rgpyjaq6vEgCQRxx01MtKfGjeUoT2YCmDzIt42SgtZ,1fvHVUUhjnEG\",\n      \"links\": {}\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"http://sAPGzbNtMrzEvxYPJPeHaxsbiFgAaRHgQ.imWLiYkr+lLE\",\n    \"next_page_url\": \"https://UCp.kjpmW45+3I2Fk3YcXCKLEwnxuOeljhqmHa.\",\n    \"page\": 63468858,\n    \"page_size\": 38270822,\n    \"previous_page_url\": \"http://XSoyeNJ.zgPa4VLVi00P\",\n    \"url\": \"http://XvkFPOdXRuRt.nsqkBgLK-PoFfx17sKtYy\",\n    \"key\": \"quis minim\"\n  }\n}"
						}
					]
				},
				{
					"name": "Fetch Challenge",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Challenges",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Challenges. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "Sid",
									"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
									"description": "(Required) A 34 character string that uniquely identifies this Challenge."
								}
							]
						},
						"description": "Fetch a specific Challenge."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Challenges",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Challenges. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "Sid",
											"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
											"description": "(Required) A 34 character string that uniquely identifies this Challenge."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YC2EEd65cFc0deeAE92CF500bF327aBe60\",\n  \"account_sid\": \"AC88EbF27c82dE36d7EF15CF7a2D4275f8\",\n  \"service_sid\": \"VAF2B3E994fD39fDE170cE9ebEb4649AF5\",\n  \"entity_sid\": \"YE6D9ffCE7eFca00E88DEccb9ce53DC97c\",\n  \"identity\": \"cupidatat dolor i\",\n  \"factor_sid\": \"YF711e443Dd1D3a649fE2a629F8B81aDf9\",\n  \"date_created\": \"1946-10-08T07:52:58.151Z\",\n  \"date_updated\": \"2016-07-24T03:41:42.616Z\",\n  \"date_responded\": \"2005-12-11T15:35:25.806Z\",\n  \"expiration_date\": \"1954-06-07T19:48:34.981Z\",\n  \"status\": \"<string>\",\n  \"responded_reason\": \"not_requested\",\n  \"details\": {},\n  \"hidden_details\": {},\n  \"metadata\": {},\n  \"factor_type\": \"push\",\n  \"url\": \"https://cDNoIcttiWVTwJcxtnVlugHNlcQgEO.qpuDiH,LMxOAx8swqT.hIjFguvLEpIBCx1zwmkccQM\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "Update Challenge",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "AuthPayload",
									"value": "voluptate nostrud ex nisi ad",
									"description": "The optional payload needed to verify the Challenge. E.g., a TOTP would use the numeric code. For `TOTP` this value must be between 3 and 8 characters long. For `Push` this value can be up to 5456 characters in length",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Challenges",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "Sid",
									"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
									"description": "(Required) A 34 character string that uniquely identifies this Challenge."
								}
							]
						},
						"description": "Verify a specific Challenge."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "AuthPayload",
											"value": "voluptate nostrud ex nisi ad",
											"description": "The optional payload needed to verify the Challenge. E.g., a TOTP would use the numeric code. For `TOTP` this value must be between 3 and 8 characters long. For `Push` this value can be up to 5456 characters in length",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Challenges",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "Sid",
											"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
											"description": "(Required) A 34 character string that uniquely identifies this Challenge."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YC2EEd65cFc0deeAE92CF500bF327aBe60\",\n  \"account_sid\": \"AC88EbF27c82dE36d7EF15CF7a2D4275f8\",\n  \"service_sid\": \"VAF2B3E994fD39fDE170cE9ebEb4649AF5\",\n  \"entity_sid\": \"YE6D9ffCE7eFca00E88DEccb9ce53DC97c\",\n  \"identity\": \"cupidatat dolor i\",\n  \"factor_sid\": \"YF711e443Dd1D3a649fE2a629F8B81aDf9\",\n  \"date_created\": \"1946-10-08T07:52:58.151Z\",\n  \"date_updated\": \"2016-07-24T03:41:42.616Z\",\n  \"date_responded\": \"2005-12-11T15:35:25.806Z\",\n  \"expiration_date\": \"1954-06-07T19:48:34.981Z\",\n  \"status\": \"<string>\",\n  \"responded_reason\": \"not_requested\",\n  \"details\": {},\n  \"hidden_details\": {},\n  \"metadata\": {},\n  \"factor_type\": \"push\",\n  \"url\": \"https://cDNoIcttiWVTwJcxtnVlugHNlcQgEO.qpuDiH,LMxOAx8swqT.hIjFguvLEpIBCx1zwmkccQM\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "Create Notification",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Ttl",
									"value": "-16145973",
									"description": "How long, in seconds, the notification is valid. Can be an integer between 0 and 300. Default is 300. Delivery is attempted until the TTL elapses, even if the device is offline. 0 means that the notification delivery is attempted immediately, only once, and is not stored for future delivery.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-ChallengeSid-Notifications-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:ChallengeSid/Notifications",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Challenges-ChallengeSid-Notifications-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Challenges",
								":ChallengeSid",
								"Notifications"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "ChallengeSid",
									"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
									"description": "(Required) The unique SID identifier of the Challenge."
								}
							]
						},
						"description": "Create a new Notification for the corresponding Challenge"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Ttl",
											"value": "-16145973",
											"description": "How long, in seconds, the notification is valid. Can be an integer between 0 and 300. Default is 300. Delivery is attempted until the TTL elapses, even if the device is offline. 0 means that the notification delivery is attempted immediately, only once, and is not stored for future delivery.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Challenges-ChallengeSid-Notifications-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Challenges/:ChallengeSid/Notifications",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Challenges-ChallengeSid-Notifications-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Challenges",
										":ChallengeSid",
										"Notifications"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "ChallengeSid",
											"value": "YC1b5154305E3Dd929724ad7EC1cFfBc40",
											"description": "(Required) The unique SID identifier of the Challenge."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"NT5fAE90916bCe6B4E1E79d4774Cf2EdCE\",\n  \"account_sid\": \"ACCd7bE9eFfeBbABFf0139f9C603AD32aB\",\n  \"service_sid\": \"VA7f7D1dBACB56Ca0ad4DD0eDAd60b2A91\",\n  \"entity_sid\": \"YEfF48b0AA01E139B56D0A4D05da507F86\",\n  \"identity\": \"voluptate nisi ea sit\",\n  \"challenge_sid\": \"YCfbAAE5c2e066EB5dBdc2D06515cF19f2\",\n  \"priority\": \"Excepteur\",\n  \"ttl\": 63457606,\n  \"date_created\": \"1953-10-14T03:25:23.586Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Entities",
			"item": [
				{
					"name": "Create Entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Identity",
									"value": "ut",
									"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Url}}/v2/Services/:ServiceSid/Entities",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								}
							]
						},
						"description": "Create a new Entity for the Service"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Identity",
											"value": "ut",
											"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Url}}/v2/Services/:ServiceSid/Entities",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YEbdaC3A59f75ef31df7F8A6Fb7FAb87b1\",\n  \"identity\": \"in veniam adipisicing Duis\",\n  \"account_sid\": \"ACDFE1cE1E980aE1cFBd95D099b2eEdcD3\",\n  \"service_sid\": \"VA5F0DAA1aCC1A20fb61686Ba50CBcDf7C\",\n  \"date_created\": \"1997-09-10T18:16:13.050Z\",\n  \"date_updated\": \"1992-06-07T20:27:35.758Z\",\n  \"url\": \"http://sLAOSQkZByrWlWOrxq.ihAhCswaHkgGw5gdRrvYeUKOe,yM4d+dQ6ndx\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "List Entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Url}}/v2/Services/:ServiceSid/Entities",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								}
							]
						},
						"description": "Retrieve a list of all Entities for a Service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Url}}/v2/Services/:ServiceSid/Entities?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"entities\": [\n    {\n      \"sid\": \"YEA75D7bC1e9d9C2F6A1Fe8c09Ebe4cd9A\",\n      \"identity\": \"laborum magna\",\n      \"account_sid\": \"ACDE22dc8FB395c8BdC45C53e469AA8eBE\",\n      \"service_sid\": \"VA8c4Ac1cBF2dde07E8385Bb9683Ee0c02\",\n      \"date_created\": \"2018-02-09T01:28:53.397Z\",\n      \"date_updated\": \"1997-06-10T07:33:13.513Z\",\n      \"url\": \"http://FrLyRcUyOVsKvbU.cgJ6ssfKLm4JEtOfd8NgR.JjfYpxhhk8MrxU0LBF-QU0CQj7x\",\n      \"links\": {}\n    },\n    {\n      \"sid\": \"YE14b7C62ca2fA3b67b6e4B1Fe1AA78020\",\n      \"identity\": \"velit consequat\",\n      \"account_sid\": \"ACfC666f17f95dE1abd6DbCCA1d2CC5Db5\",\n      \"service_sid\": \"VA2CF7Ce9e05C4dEB22becbFb9DCfc6FeD\",\n      \"date_created\": \"1948-03-29T02:28:08.039Z\",\n      \"date_updated\": \"2014-05-25T14:22:41.385Z\",\n      \"url\": \"http://wwXnLyirnThvtzEiRoitEbTGYoJjMIK.czbgp78QPyThS\",\n      \"links\": {}\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://dcnWrX.yutgyS+QOvrwgXf..VH9oLMUqxZxZCM5k6.l5igarimi,IpJBazBNYEoJem7piSt,0-ZWtFAkd7u-AQTm\",\n    \"next_page_url\": \"https://uRVcVcXFSi.sikIwln.Yx2IyX2KEqlMVRRtpD+L6uylWC3OPfBSOFQ0tah.PiAmWsVwQGESJ\",\n    \"page\": 68106763,\n    \"page_size\": -88886535,\n    \"previous_page_url\": \"https://HngtFJGlbYXvUJpXWZuOHZpOOQcMEeWz.zjzpP4wCwBO\",\n    \"url\": \"http://BiVnrCCwXKIjrJUuB.blwAnJR6N2dA8qLDUN+VvMIv+16YP0YRi2Q.ODLsPh3cBZjHMflL6GH2qn-S.AsduIU5kYzYAwIk\",\n    \"key\": \"amet\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Url}}/v2/Services/:ServiceSid/Entities/:Identity",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Delete a specific Entity."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Url}}/v2/Services/:ServiceSid/Entities/:Identity",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Url}}/v2/Services/:ServiceSid/Entities/:Identity",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Fetch a specific Entity."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Url}}/v2/Services/:ServiceSid/Entities/:Identity",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YEbdaC3A59f75ef31df7F8A6Fb7FAb87b1\",\n  \"identity\": \"in veniam adipisicing Duis\",\n  \"account_sid\": \"ACDFE1cE1E980aE1cFBd95D099b2eEdcD3\",\n  \"service_sid\": \"VA5F0DAA1aCC1A20fb61686Ba50CBcDf7C\",\n  \"date_created\": \"1997-09-10T18:16:13.050Z\",\n  \"date_updated\": \"1992-06-07T20:27:35.758Z\",\n  \"url\": \"http://sLAOSQkZByrWlWOrxq.ihAhCswaHkgGw5gdRrvYeUKOe,yM4d+dQ6ndx\",\n  \"links\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "Factors",
			"item": [
				{
					"name": "Delete Factor",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Factors",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "Sid",
									"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
									"description": "(Required) A 34 character string that uniquely identifies this Factor."
								}
							]
						},
						"description": "Delete a specific Factor."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Factors",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "Sid",
											"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
											"description": "(Required) A 34 character string that uniquely identifies this Factor."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Factor",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Factors",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "Sid",
									"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
									"description": "(Required) A 34 character string that uniquely identifies this Factor."
								}
							]
						},
						"description": "Fetch a specific Factor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Factors",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "Sid",
											"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
											"description": "(Required) A 34 character string that uniquely identifies this Factor."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YFDbA0A4bFb3bD2c3C01FadFFFEAEd6E8E\",\n  \"account_sid\": \"AC2d61CD8d2Aaa4fa63EacD66a6eaFDE93\",\n  \"service_sid\": \"VAdEDDF908Baf030a5CE7188A3d46A612A\",\n  \"entity_sid\": \"YEbA583D3CEe6ECd0c0ac607e4b2D044b2\",\n  \"identity\": \"minim elit\",\n  \"date_created\": \"2019-01-05T01:54:25.085Z\",\n  \"date_updated\": \"1961-08-30T20:44:47.331Z\",\n  \"friendly_name\": \"enim in tempor est\",\n  \"status\": \"unverified\",\n  \"factor_type\": \"totp\",\n  \"config\": {},\n  \"metadata\": {},\n  \"url\": \"http://xGxkDxswZSWCiGPigWWXp.knUIDiwQPfqExAXWovwSM389Xk.FXafTmP3RtF8lFee.yPi9kUsCdQk\"\n}"
						}
					]
				},
				{
					"name": "Update Factor",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "AuthPayload",
									"value": "fugiat in voluptate",
									"description": "The optional payload needed to verify the Factor for the first time. E.g. for a TOTP, the numeric code.",
									"disabled": true
								},
								{
									"key": "FriendlyName",
									"value": "adipisicing ad culpa",
									"description": "The new friendly name of this Factor. It can be up to 64 characters.",
									"disabled": true
								},
								{
									"key": "Config.NotificationToken",
									"value": "et non ea",
									"description": "For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Required when `factor_type` is `push`. If specified, this value must be between 32 and 255 characters long.",
									"disabled": true
								},
								{
									"key": "Config.SdkVersion",
									"value": "eu nulla cupidatat aliqua nostrud",
									"description": "The Verify Push SDK version used to configure the factor",
									"disabled": true
								},
								{
									"key": "Config.TimeStep",
									"value": "47368397",
									"description": "Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive",
									"disabled": true
								},
								{
									"key": "Config.Skew",
									"value": "48720050",
									"description": "The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive",
									"disabled": true
								},
								{
									"key": "Config.CodeLength",
									"value": "46604553",
									"description": "Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive",
									"disabled": true
								},
								{
									"key": "Config.Alg",
									"value": "sha1",
									"description": "The algorithm used to derive the TOTP codes. Can be `sha1`, `sha256` or `sha512`",
									"disabled": true
								},
								{
									"key": "Config.NotificationPlatform",
									"value": "sint laboris",
									"description": "The transport technology used to generate the Notification Token. Can be `apn`, `fcm` or `none`.\n\nRequired when `factor_type` is `push`.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Factors",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								},
								{
									"key": "Sid",
									"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
									"description": "(Required) A 34 character string that uniquely identifies this Factor."
								}
							]
						},
						"description": "Update a specific Factor. This endpoint can be used to Verify a Factor if passed an `AuthPayload` param."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "AuthPayload",
											"value": "fugiat in voluptate",
											"description": "The optional payload needed to verify the Factor for the first time. E.g. for a TOTP, the numeric code.",
											"disabled": true
										},
										{
											"key": "FriendlyName",
											"value": "adipisicing ad culpa",
											"description": "The new friendly name of this Factor. It can be up to 64 characters.",
											"disabled": true
										},
										{
											"key": "Config.NotificationToken",
											"value": "et non ea",
											"description": "For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Required when `factor_type` is `push`. If specified, this value must be between 32 and 255 characters long.",
											"disabled": true
										},
										{
											"key": "Config.SdkVersion",
											"value": "eu nulla cupidatat aliqua nostrud",
											"description": "The Verify Push SDK version used to configure the factor",
											"disabled": true
										},
										{
											"key": "Config.TimeStep",
											"value": "47368397",
											"description": "Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive",
											"disabled": true
										},
										{
											"key": "Config.Skew",
											"value": "48720050",
											"description": "The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive",
											"disabled": true
										},
										{
											"key": "Config.CodeLength",
											"value": "46604553",
											"description": "Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive",
											"disabled": true
										},
										{
											"key": "Config.Alg",
											"value": "sha1",
											"description": "The algorithm used to derive the TOTP codes. Can be `sha1`, `sha256` or `sha512`",
											"disabled": true
										},
										{
											"key": "Config.NotificationPlatform",
											"value": "sint laboris",
											"description": "The transport technology used to generate the Notification Token. Can be `apn`, `fcm` or `none`.\n\nRequired when `factor_type` is `push`.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Factors",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										},
										{
											"key": "Sid",
											"value": "YFb7AEE5CDf93fdcFBbABbeD328d0bf0Cf",
											"description": "(Required) A 34 character string that uniquely identifies this Factor."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YFDbA0A4bFb3bD2c3C01FadFFFEAEd6E8E\",\n  \"account_sid\": \"AC2d61CD8d2Aaa4fa63EacD66a6eaFDE93\",\n  \"service_sid\": \"VAdEDDF908Baf030a5CE7188A3d46A612A\",\n  \"entity_sid\": \"YEbA583D3CEe6ECd0c0ac607e4b2D044b2\",\n  \"identity\": \"minim elit\",\n  \"date_created\": \"2019-01-05T01:54:25.085Z\",\n  \"date_updated\": \"1961-08-30T20:44:47.331Z\",\n  \"friendly_name\": \"enim in tempor est\",\n  \"status\": \"unverified\",\n  \"factor_type\": \"totp\",\n  \"config\": {},\n  \"metadata\": {},\n  \"url\": \"http://xGxkDxswZSWCiGPigWWXp.knUIDiwQPfqExAXWovwSM389Xk.FXafTmP3RtF8lFee.yPi9kUsCdQk\"\n}"
						}
					]
				},
				{
					"name": "List Factor",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Factors"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Factors. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Retrieve a list of all Factors for an Entity."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Factors"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Factors. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"factors\": [\n    {\n      \"sid\": \"YFAafeFaf33abc01F15c6f781AeC6C51fF\",\n      \"account_sid\": \"ACc6Bfaa3dd558eBbEa8526F7bBA00B5B2\",\n      \"service_sid\": \"VA1fd8cCf82bA79F8D97fEd6dF3b9B8bf0\",\n      \"entity_sid\": \"YEA5CDd3F44dD8693cDec48DFd999d9DE9\",\n      \"identity\": \"id in proident\",\n      \"date_created\": \"2021-05-04T10:47:07.056Z\",\n      \"date_updated\": \"1995-08-10T16:58:35.591Z\",\n      \"friendly_name\": \"est quis\",\n      \"status\": \"verified\",\n      \"factor_type\": \"totp\",\n      \"config\": {},\n      \"metadata\": {},\n      \"url\": \"https://zrGjYiebfaUUPqVOyKubYMUNSkoalyNOm.qrxc-KR4br5JmkhYZ-1soEWufpI8TBpZJOn+SpDdBhIGXl7GjrU2sb84gDwl1lwkylPBgEH.il\"\n    },\n    {\n      \"sid\": \"YF63bab5782d8CcA2D0F3b8017f5b91faf\",\n      \"account_sid\": \"ACC5c69E0fb92aec0f261baC94C089Dc4B\",\n      \"service_sid\": \"VAf2F50E6ae4e7e6B585fced48a85Ded21\",\n      \"entity_sid\": \"YEbeEAe5cb9742DeE0E94eaE42F4c0DFEd\",\n      \"identity\": \"quis anim ipsum adipisicing aute\",\n      \"date_created\": \"1950-01-25T06:20:51.758Z\",\n      \"date_updated\": \"1952-08-07T18:49:19.073Z\",\n      \"friendly_name\": \"Excepteur nulla do anim\",\n      \"status\": \"verified\",\n      \"factor_type\": \"totp\",\n      \"config\": {},\n      \"metadata\": {},\n      \"url\": \"http://rTQOEeFvsFFUlFVbLizpEdKBddsatr.mmkrWCBlpNM6.jK0DvmKR+2ScccBkPmvAjt1-L2V,eA0F.gUKkdaoAp7FcJ9sPoegowbPTsZ0x9TMGZ\"\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://Dlu.ovgaM3s1PZuk1RSJGVstAhAvAtm2pbPvqovJ+ZKvcf8GLK2DZSaTXqR4bXJF1+zpIIMaVHMb2ukq-2kcWT,fR\",\n    \"next_page_url\": \"http://LhqyLVgypUTc.roAoudSrR5kcOVROB0aj-5Ax5.Dnrw7kgyjuLgX\",\n    \"page\": -50990140,\n    \"page_size\": -77505601,\n    \"previous_page_url\": \"http://oTHGzsAIRsJ.bwva,+RdVeAVo4pCDx5cn7\",\n    \"url\": \"http://JRYPYmhlDX.tjk.UBaUMPEUuRLM8LW-L,SrhISOvs,yKyg.+HQ.0lVMkIMFBw8JYz\",\n    \"key\": \"dolor voluptate irure aute\"\n  }\n}"
						}
					]
				},
				{
					"name": "Create New Factor",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FriendlyName",
									"value": "voluptate",
									"description": "(Required) The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors.\nFor `factor_type` `push`, this could be a device name.\nFor `factor_type` `totp`, this value is used as the “account name” in constructing the `binding.uri` property.\nAt the same time, we recommend avoiding providing PII."
								},
								{
									"key": "FactorType",
									"value": "totp",
									"description": "(Required) The Type of this Factor. Currently `push` and `totp` are supported."
								},
								{
									"key": "Binding.Alg",
									"value": "iru",
									"description": "The algorithm used when `factor_type` is `push`. Algorithm supported: `ES256`",
									"disabled": true
								},
								{
									"key": "Binding.PublicKey",
									"value": "enim eu ut aliqua et",
									"description": "The Ecdsa public key in PKIX, ASN.1 DER format encoded in Base64.\n\nRequired when `factor_type` is `push`",
									"disabled": true
								},
								{
									"key": "Config.AppId",
									"value": "velit sunt ex labore",
									"description": "The ID that uniquely identifies your app in the Google or Apple store, such as `com.example.myapp`. It can be up to 100 characters long.\n\nRequired when `factor_type` is `push`.",
									"disabled": true
								},
								{
									"key": "Config.NotificationPlatform",
									"value": "apn",
									"description": "The transport technology used to generate the Notification Token. Can be `apn`, `fcm` or `none`.\n\nRequired when `factor_type` is `push`.",
									"disabled": true
								},
								{
									"key": "Config.NotificationToken",
									"value": "ea enim Ut exercitation",
									"description": "For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Must be between 32 and 255 characters long.\n\nRequired when `factor_type` is `push`.",
									"disabled": true
								},
								{
									"key": "Config.SdkVersion",
									"value": "Lorem Ut voluptate occaecat",
									"description": "The Verify Push SDK version used to configure the factor\n\nRequired when `factor_type` is `push`",
									"disabled": true
								},
								{
									"key": "Binding.Secret",
									"value": "incididunt proident anim velit",
									"description": "The shared secret for TOTP factors encoded in Base32. This can be provided when creating the Factor, otherwise it will be generated.\n\nUsed when `factor_type` is `totp`",
									"disabled": true
								},
								{
									"key": "Config.TimeStep",
									"value": "-92701874",
									"description": "Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. The default value is defined at the service level in the property `totp.time_step`. Defaults to 30 seconds if not configured.\n\nUsed when `factor_type` is `totp`",
									"disabled": true
								},
								{
									"key": "Config.Skew",
									"value": "-18880534",
									"description": "The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. The default value is defined at the service level in the property `totp.skew`. If not configured defaults to 1.\n\nUsed when `factor_type` is `totp`",
									"disabled": true
								},
								{
									"key": "Config.CodeLength",
									"value": "83190162",
									"description": "Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. The default value is defined at the service level in the property `totp.code_length`. If not configured defaults to 6.\n\nUsed when `factor_type` is `totp`",
									"disabled": true
								},
								{
									"key": "Config.Alg",
									"value": "sha256",
									"description": "The algorithm used to derive the TOTP codes. Can be `sha1`, `sha256` or `sha512`. Defaults to `sha1`.\n\nUsed when `factor_type` is `totp`",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors",
							"host": [
								"{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Entities",
								":Identity",
								"Factors"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Identity",
									"value": "dolore",
									"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
								}
							]
						},
						"description": "Create a new Factor for the Entity"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FriendlyName",
											"value": "voluptate",
											"description": "(Required) The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors.\nFor `factor_type` `push`, this could be a device name.\nFor `factor_type` `totp`, this value is used as the “account name” in constructing the `binding.uri` property.\nAt the same time, we recommend avoiding providing PII."
										},
										{
											"key": "FactorType",
											"value": "totp",
											"description": "(Required) The Type of this Factor. Currently `push` and `totp` are supported."
										},
										{
											"key": "Binding.Alg",
											"value": "iru",
											"description": "The algorithm used when `factor_type` is `push`. Algorithm supported: `ES256`",
											"disabled": true
										},
										{
											"key": "Binding.PublicKey",
											"value": "enim eu ut aliqua et",
											"description": "The Ecdsa public key in PKIX, ASN.1 DER format encoded in Base64.\n\nRequired when `factor_type` is `push`",
											"disabled": true
										},
										{
											"key": "Config.AppId",
											"value": "velit sunt ex labore",
											"description": "The ID that uniquely identifies your app in the Google or Apple store, such as `com.example.myapp`. It can be up to 100 characters long.\n\nRequired when `factor_type` is `push`.",
											"disabled": true
										},
										{
											"key": "Config.NotificationPlatform",
											"value": "apn",
											"description": "The transport technology used to generate the Notification Token. Can be `apn`, `fcm` or `none`.\n\nRequired when `factor_type` is `push`.",
											"disabled": true
										},
										{
											"key": "Config.NotificationToken",
											"value": "ea enim Ut exercitation",
											"description": "For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Must be between 32 and 255 characters long.\n\nRequired when `factor_type` is `push`.",
											"disabled": true
										},
										{
											"key": "Config.SdkVersion",
											"value": "Lorem Ut voluptate occaecat",
											"description": "The Verify Push SDK version used to configure the factor\n\nRequired when `factor_type` is `push`",
											"disabled": true
										},
										{
											"key": "Binding.Secret",
											"value": "incididunt proident anim velit",
											"description": "The shared secret for TOTP factors encoded in Base32. This can be provided when creating the Factor, otherwise it will be generated.\n\nUsed when `factor_type` is `totp`",
											"disabled": true
										},
										{
											"key": "Config.TimeStep",
											"value": "-92701874",
											"description": "Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. The default value is defined at the service level in the property `totp.time_step`. Defaults to 30 seconds if not configured.\n\nUsed when `factor_type` is `totp`",
											"disabled": true
										},
										{
											"key": "Config.Skew",
											"value": "-18880534",
											"description": "The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. The default value is defined at the service level in the property `totp.skew`. If not configured defaults to 1.\n\nUsed when `factor_type` is `totp`",
											"disabled": true
										},
										{
											"key": "Config.CodeLength",
											"value": "83190162",
											"description": "Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. The default value is defined at the service level in the property `totp.code_length`. If not configured defaults to 6.\n\nUsed when `factor_type` is `totp`",
											"disabled": true
										},
										{
											"key": "Config.Alg",
											"value": "sha256",
											"description": "The algorithm used to derive the TOTP codes. Can be `sha1`, `sha256` or `sha512`. Defaults to `sha1`.\n\nUsed when `factor_type` is `totp`",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}/v2/Services/:ServiceSid/Entities/:Identity/Factors",
									"host": [
										"{{v2-Services-ServiceSid-Entities-Identity-Factors-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Entities",
										":Identity",
										"Factors"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Identity",
											"value": "dolore",
											"description": "(Required) Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YFE5A27BbFa6Ea5d26F27EFC0F0aabFFC7\",\n  \"account_sid\": \"AC5D7D3E2F06E9eBBa7a6710Dc5badf93F\",\n  \"service_sid\": \"VA6d2eEF909b9e71eD7B4BD6d45395810b\",\n  \"entity_sid\": \"YEa8ce949c4c410fDcDCB3F1fAad73FcCd\",\n  \"identity\": \"occaecat laboris\",\n  \"binding\": {},\n  \"date_created\": \"1977-03-07T01:56:59.834Z\",\n  \"date_updated\": \"1981-10-09T05:50:29.526Z\",\n  \"friendly_name\": \"pariatur Lorem\",\n  \"status\": \"unverified\",\n  \"factor_type\": \"totp\",\n  \"config\": {},\n  \"metadata\": {},\n  \"url\": \"https://TxRLTIovJxyQnGYGrxqpZMcwId.zxxVGMML5EG0jDOt6f6cHph3K-+aj+oaiHvuZpaJvxhWh5n9LQRPx\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Forms",
			"item": [
				{
					"name": "Fetch Form",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Forms-FormType-Url}}/v2/Forms/:FormType",
							"host": [
								"{{v2-Forms-FormType-Url}}"
							],
							"path": [
								"v2",
								"Forms",
								":FormType"
							],
							"variable": [
								{
									"key": "FormType",
									"value": "form-push",
									"description": "(Required) The Type of this Form. Currently only `form-push` is supported."
								}
							]
						},
						"description": "Fetch the forms for a specific Form Type."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Forms-FormType-Url}}/v2/Forms/:FormType",
									"host": [
										"{{v2-Forms-FormType-Url}}"
									],
									"path": [
										"v2",
										"Forms",
										":FormType"
									],
									"variable": [
										{
											"key": "FormType",
											"value": "form-push",
											"description": "(Required) The Type of this Form. Currently only `form-push` is supported."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"form_type\": \"<string>\",\n  \"forms\": {},\n  \"form_meta\": {},\n  \"url\": \"https://k.wqevtPzc0kw\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Messaging Configurations",
			"item": [
				{
					"name": "Create Messaging Configuration",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Country",
									"value": "occaecat nisi nostrud proident sunt",
									"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
								},
								{
									"key": "MessagingServiceSid",
									"value": "MG7B2AB71cEaAbDdFF41b5b7Fabcb5Af0f",
									"description": "(Required) The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration."
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Url}}/v2/Services/:ServiceSid/MessagingConfigurations",
							"host": [
								"{{v2-Services-ServiceSid-MessagingConfigurations-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"MessagingConfigurations"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
								}
							]
						},
						"description": "Create a new MessagingConfiguration for a service."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Country",
											"value": "occaecat nisi nostrud proident sunt",
											"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
										},
										{
											"key": "MessagingServiceSid",
											"value": "MG7B2AB71cEaAbDdFF41b5b7Fabcb5Af0f",
											"description": "(Required) The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration."
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Url}}/v2/Services/:ServiceSid/MessagingConfigurations",
									"host": [
										"{{v2-Services-ServiceSid-MessagingConfigurations-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"MessagingConfigurations"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_sid\": \"AC94BA34AbAfFaC27FADeb5913aE4A4feb\",\n  \"service_sid\": \"VAd03d62eCB9F5a0CeDEECc92Cce6C1D7e\",\n  \"country\": \"culpa\",\n  \"messaging_service_sid\": \"MG7A3b1Dba5CFcBeCF6f40de35b1c5fD8b\",\n  \"date_created\": \"1975-01-13T11:52:23.902Z\",\n  \"date_updated\": \"1957-06-15T13:20:55.151Z\",\n  \"url\": \"http://aJAHEz.ncpaBPqKAfRjF6Vcx8027EXyIhfhe8JxSiSpVJ,9\"\n}"
						}
					]
				},
				{
					"name": "List Messaging Configuration",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Url}}/v2/Services/:ServiceSid/MessagingConfigurations",
							"host": [
								"{{v2-Services-ServiceSid-MessagingConfigurations-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"MessagingConfigurations"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
								}
							]
						},
						"description": "Retrieve a list of all Messaging Configurations for a Service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Url}}/v2/Services/:ServiceSid/MessagingConfigurations?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-MessagingConfigurations-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"MessagingConfigurations"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"messaging_configurations\": [\n    {\n      \"account_sid\": \"AC799FAcCC57f2c4D571a5165AaFE47Fcb\",\n      \"service_sid\": \"VA72ED9c008E0DefDD8cD9d1dcbAFFcb9e\",\n      \"country\": \"ut \",\n      \"messaging_service_sid\": \"MG3f96d6EfCaEE0fee2aC3EEBF12ee90bd\",\n      \"date_created\": \"2022-07-17T08:44:09.249Z\",\n      \"date_updated\": \"2007-02-05T11:23:55.745Z\",\n      \"url\": \"http://EOTnDLtMXixhZKiZCDRpss.nrwPL6mPY,vxRkTGLVkNpG6vxalcbmFHCcSe2KJMnVR4mRS80n6GFLSCIzmGSVeG\"\n    },\n    {\n      \"account_sid\": \"AC244d7BDdCe4f2E6a661Ad3bBdBB1b4C6\",\n      \"service_sid\": \"VABF6e55d05eA035c3e2c3994F0B79D293\",\n      \"country\": \"nulla\",\n      \"messaging_service_sid\": \"MG031A6Cf113d73Ba08AcCEeEfeCFebde7\",\n      \"date_created\": \"1968-01-11T04:56:46.969Z\",\n      \"date_updated\": \"1951-06-23T18:25:29.514Z\",\n      \"url\": \"http://ycCC.ybciQYlw,FcEwbNy2ki0S2WAyuLtPSy\"\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"http://aUJxFaIVXTTNVRhYwvMzcNTi.uqglPo+7nB\",\n    \"next_page_url\": \"https://Vd.ytofyMJcbN7ffpCkT5RYR3\",\n    \"page\": 47767936,\n    \"page_size\": 60978632,\n    \"previous_page_url\": \"http://BxNGDzwoT.fzj1igxLG1I57n\",\n    \"url\": \"https://wykWROaFqwd.pemeQI,fLrw,LiqKoWz.9zuiXQMwrcwurXx3x-frxIEgZr1ihtK22gMV5,VnLmR86ZI9\",\n    \"key\": \"id occaecat\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Messaging Configuration",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "MessagingServiceSid",
									"value": "MGdaFDB6DF9bf64e1D84AAe5F92fcf1aEa",
									"description": "(Required) The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration."
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
							"host": [
								"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"MessagingConfigurations",
								":Country"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
								},
								{
									"key": "Country",
									"value": "dolore",
									"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
								}
							]
						},
						"description": "Update a specific MessagingConfiguration"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "MessagingServiceSid",
											"value": "MGdaFDB6DF9bf64e1D84AAe5F92fcf1aEa",
											"description": "(Required) The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration."
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
									"host": [
										"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"MessagingConfigurations",
										":Country"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
										},
										{
											"key": "Country",
											"value": "dolore",
											"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_sid\": \"AC94BA34AbAfFaC27FADeb5913aE4A4feb\",\n  \"service_sid\": \"VAd03d62eCB9F5a0CeDEECc92Cce6C1D7e\",\n  \"country\": \"culpa\",\n  \"messaging_service_sid\": \"MG7A3b1Dba5CFcBeCF6f40de35b1c5fD8b\",\n  \"date_created\": \"1975-01-13T11:52:23.902Z\",\n  \"date_updated\": \"1957-06-15T13:20:55.151Z\",\n  \"url\": \"http://aJAHEz.ncpaBPqKAfRjF6Vcx8027EXyIhfhe8JxSiSpVJ,9\"\n}"
						}
					]
				},
				{
					"name": "Fetch Messaging Configuration",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
							"host": [
								"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"MessagingConfigurations",
								":Country"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
								},
								{
									"key": "Country",
									"value": "dolore",
									"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
								}
							]
						},
						"description": "Fetch a specific MessagingConfiguration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
									"host": [
										"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"MessagingConfigurations",
										":Country"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
										},
										{
											"key": "Country",
											"value": "dolore",
											"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_sid\": \"AC94BA34AbAfFaC27FADeb5913aE4A4feb\",\n  \"service_sid\": \"VAd03d62eCB9F5a0CeDEECc92Cce6C1D7e\",\n  \"country\": \"culpa\",\n  \"messaging_service_sid\": \"MG7A3b1Dba5CFcBeCF6f40de35b1c5fD8b\",\n  \"date_created\": \"1975-01-13T11:52:23.902Z\",\n  \"date_updated\": \"1957-06-15T13:20:55.151Z\",\n  \"url\": \"http://aJAHEz.ncpaBPqKAfRjF6Vcx8027EXyIhfhe8JxSiSpVJ,9\"\n}"
						}
					]
				},
				{
					"name": "Delete Messaging Configuration",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
							"host": [
								"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"MessagingConfigurations",
								":Country"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
								},
								{
									"key": "Country",
									"value": "dolore",
									"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
								}
							]
						},
						"description": "Delete a specific MessagingConfiguration."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}/v2/Services/:ServiceSid/MessagingConfigurations/:Country",
									"host": [
										"{{v2-Services-ServiceSid-MessagingConfigurations-Country-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"MessagingConfigurations",
										":Country"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with."
										},
										{
											"key": "Country",
											"value": "dolore",
											"description": "(Required) The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rate Limits",
			"item": [
				{
					"name": "Create Rate Limit",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "UniqueName",
									"value": "est ullamco",
									"description": "(Required) Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**"
								},
								{
									"key": "Description",
									"value": "consequat deserunt cillum",
									"description": "Description of this Rate Limit",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-Url}}/v2/Services/:ServiceSid/RateLimits",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								}
							]
						},
						"description": "Create a new Rate Limit for a Service"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "UniqueName",
											"value": "est ullamco",
											"description": "(Required) Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**"
										},
										{
											"key": "Description",
											"value": "consequat deserunt cillum",
											"description": "Description of this Rate Limit",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-Url}}/v2/Services/:ServiceSid/RateLimits",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"RKBB8ca86Deebe99ad2497D5A64Dd6C0BD\",\n  \"service_sid\": \"VAa80559EcdFa9381B12F02ABAa196Bffe\",\n  \"account_sid\": \"ACCdA1A04e940AB36b1FfBACDBEebAEba7\",\n  \"unique_name\": \"\",\n  \"description\": \"ea Ut proid\",\n  \"date_created\": \"1949-05-15T18:28:47.422Z\",\n  \"date_updated\": \"2022-04-27T19:55:49.319Z\",\n  \"url\": \"https://eDqftRzoHwMnRqTuPZQnpbpaQZGzij.zynfBQTOVFAx5FbKFzIC5Tc-43+kp.k9z3RZKqZCqIHoWcfe\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "List Rate Limit",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-Url}}/v2/Services/:ServiceSid/RateLimits",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								}
							]
						},
						"description": "Retrieve a list of all Buckets for a service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-Url}}/v2/Services/:ServiceSid/RateLimits?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"rate_limits\": [\n    {\n      \"sid\": \"RK17f4fc0F09bDf9bb7691dB7C74467BF5\",\n      \"service_sid\": \"VA983f2b44C822fA9eD272Aa2a0EeCD9EA\",\n      \"account_sid\": \"ACfa3dc985ac9fa3aA9d8c34585Fa5e3dd\",\n      \"unique_name\": \"in exercitation proident in laborum\",\n      \"description\": \"ex culpa veniam mollit\",\n      \"date_created\": \"2016-10-08T12:38:45.785Z\",\n      \"date_updated\": \"2013-06-07T16:58:04.089Z\",\n      \"url\": \"https://iGOdDOgbMlIY.nkceeoHI4pNRL93E5H98XkBrB-8tfBJsC2WkhvN\",\n      \"links\": {}\n    },\n    {\n      \"sid\": \"RK9F2AF4ae6ACaebC9Ffc2dAdb4Cd8F4E8\",\n      \"service_sid\": \"VAde9dDEFf2f1Da14188Ff3CE8936e7f73\",\n      \"account_sid\": \"AC12C6efEeba2A996Da4BCD8dcEC1ddfBb\",\n      \"unique_name\": \"anim deserunt ut\",\n      \"description\": \"id\",\n      \"date_created\": \"1978-06-19T07:16:26.909Z\",\n      \"date_updated\": \"1946-11-24T12:21:09.034Z\",\n      \"url\": \"https://HauZeCTNKrhmozxlX.rryIKhNjzpGYvbWsFAwm\",\n      \"links\": {}\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://fMGErnHRCbWfogUvWuSawPiXyY.dgDicUphCYHb9IjAgkJgyqdc9jZFHB6dsPL0PAeaXLMhbBvrBMH\",\n    \"next_page_url\": \"http://VBpg.ttdK1lXKtoqk.LKLjw5imhY.-y\",\n    \"page\": 18160106,\n    \"page_size\": -6389347,\n    \"previous_page_url\": \"http://yHVciKYJsnuf.plpgT,zvUOh4zL+docZ.SJ8oe0TEwbozbwv\",\n    \"url\": \"http://MKABSqDBTxwSqOUSAXvivYPFGUs.imCShaho28RyGeGLbolu4EXc+kVmQ3yaSHAs2G0mzW5eururiKfLWauhBZTVRsviBww81\",\n    \"key\": \"ipsum esse in\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Rate Limit",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Description",
									"value": "nulla ut officia",
									"description": "Description of this Rate Limit",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "Sid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
								}
							]
						},
						"description": "Update a specific Rate Limit."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Description",
											"value": "nulla ut officia",
											"description": "Description of this Rate Limit",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "Sid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"RKBB8ca86Deebe99ad2497D5A64Dd6C0BD\",\n  \"service_sid\": \"VAa80559EcdFa9381B12F02ABAa196Bffe\",\n  \"account_sid\": \"ACCdA1A04e940AB36b1FfBACDBEebAEba7\",\n  \"unique_name\": \"\",\n  \"description\": \"ea Ut proid\",\n  \"date_created\": \"1949-05-15T18:28:47.422Z\",\n  \"date_updated\": \"2022-04-27T19:55:49.319Z\",\n  \"url\": \"https://eDqftRzoHwMnRqTuPZQnpbpaQZGzij.zynfBQTOVFAx5FbKFzIC5Tc-43+kp.k9z3RZKqZCqIHoWcfe\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "Fetch Rate Limit",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "Sid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
								}
							]
						},
						"description": "Fetch a specific Rate Limit."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "Sid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"RKBB8ca86Deebe99ad2497D5A64Dd6C0BD\",\n  \"service_sid\": \"VAa80559EcdFa9381B12F02ABAa196Bffe\",\n  \"account_sid\": \"ACCdA1A04e940AB36b1FfBACDBEebAEba7\",\n  \"unique_name\": \"\",\n  \"description\": \"ea Ut proid\",\n  \"date_created\": \"1949-05-15T18:28:47.422Z\",\n  \"date_updated\": \"2022-04-27T19:55:49.319Z\",\n  \"url\": \"https://eDqftRzoHwMnRqTuPZQnpbpaQZGzij.zynfBQTOVFAx5FbKFzIC5Tc-43+kp.k9z3RZKqZCqIHoWcfe\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "Delete Rate Limit",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"RateLimits",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
								},
								{
									"key": "Sid",
									"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
								}
							]
						},
						"description": "Delete a specific Rate Limit."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-RateLimits-Sid-Url}}/v2/Services/:ServiceSid/RateLimits/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-RateLimits-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"RateLimits",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."
										},
										{
											"key": "Sid",
											"value": "RK777FCc071fA10eFf0C62aCdb3DA7bD1A",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Create Service",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FriendlyName",
									"value": "cupidatat dolore ea qui commodo",
									"description": "(Required) A descriptive string that you create to describe the verification service. It can be up to 30 characters long. **This value should not contain PII.**"
								},
								{
									"key": "CodeLength",
									"value": "-59157437",
									"description": "The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.",
									"disabled": true
								},
								{
									"key": "LookupEnabled",
									"value": "true",
									"description": "Whether to perform a lookup with each verification started and return info about the phone number.",
									"disabled": true
								},
								{
									"key": "SkipSmsToLandlines",
									"value": "false",
									"description": "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
									"disabled": true
								},
								{
									"key": "DtmfInputRequired",
									"value": "false",
									"description": "Whether to ask the user to press a number before delivering the verify code in a phone call.",
									"disabled": true
								},
								{
									"key": "TtsName",
									"value": "sunt",
									"description": "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
									"disabled": true
								},
								{
									"key": "Psd2Enabled",
									"value": "false",
									"description": "Whether to pass PSD2 transaction parameters when starting a verification.",
									"disabled": true
								},
								{
									"key": "DoNotShareWarningEnabled",
									"value": "true",
									"description": "Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`",
									"disabled": true
								},
								{
									"key": "CustomCodeEnabled",
									"value": "false",
									"description": "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
									"disabled": true
								},
								{
									"key": "Push.IncludeDate",
									"value": "true",
									"description": "Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter. This timestamp value is the same one as the one found in `date_created`, please use that one instead.",
									"disabled": true
								},
								{
									"key": "Push.ApnCredentialSid",
									"value": "CR888B49bcaE61dabcba81aeBE1e9Edf68",
									"description": "Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
									"disabled": true
								},
								{
									"key": "Push.FcmCredentialSid",
									"value": "CRcC4FabcdfceD3e2AB358D9b0bd03fcDc",
									"description": "Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
									"disabled": true
								},
								{
									"key": "Totp.Issuer",
									"value": "elit irure sit dolore",
									"description": "Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI. Defaults to the service friendly name if not provided.",
									"disabled": true
								},
								{
									"key": "Totp.TimeStep",
									"value": "97338407",
									"description": "Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds",
									"disabled": true
								},
								{
									"key": "Totp.CodeLength",
									"value": "31733184",
									"description": "Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6",
									"disabled": true
								},
								{
									"key": "Totp.Skew",
									"value": "74283237",
									"description": "Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1",
									"disabled": true
								},
								{
									"key": "DefaultTemplateSid",
									"value": "HJeBC2c9a9c878daA8DdbF6EE94A75Fb0A",
									"description": "The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-Url}}/v2/Services",
							"host": [
								"{{v2-Services-Url}}"
							],
							"path": [
								"v2",
								"Services"
							]
						},
						"description": "Create a new Verification Service."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FriendlyName",
											"value": "cupidatat dolore ea qui commodo",
											"description": "(Required) A descriptive string that you create to describe the verification service. It can be up to 30 characters long. **This value should not contain PII.**"
										},
										{
											"key": "CodeLength",
											"value": "-59157437",
											"description": "The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.",
											"disabled": true
										},
										{
											"key": "LookupEnabled",
											"value": "true",
											"description": "Whether to perform a lookup with each verification started and return info about the phone number.",
											"disabled": true
										},
										{
											"key": "SkipSmsToLandlines",
											"value": "false",
											"description": "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
											"disabled": true
										},
										{
											"key": "DtmfInputRequired",
											"value": "false",
											"description": "Whether to ask the user to press a number before delivering the verify code in a phone call.",
											"disabled": true
										},
										{
											"key": "TtsName",
											"value": "sunt",
											"description": "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
											"disabled": true
										},
										{
											"key": "Psd2Enabled",
											"value": "false",
											"description": "Whether to pass PSD2 transaction parameters when starting a verification.",
											"disabled": true
										},
										{
											"key": "DoNotShareWarningEnabled",
											"value": "true",
											"description": "Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`",
											"disabled": true
										},
										{
											"key": "CustomCodeEnabled",
											"value": "false",
											"description": "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
											"disabled": true
										},
										{
											"key": "Push.IncludeDate",
											"value": "true",
											"description": "Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter. This timestamp value is the same one as the one found in `date_created`, please use that one instead.",
											"disabled": true
										},
										{
											"key": "Push.ApnCredentialSid",
											"value": "CR888B49bcaE61dabcba81aeBE1e9Edf68",
											"description": "Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
											"disabled": true
										},
										{
											"key": "Push.FcmCredentialSid",
											"value": "CRcC4FabcdfceD3e2AB358D9b0bd03fcDc",
											"description": "Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
											"disabled": true
										},
										{
											"key": "Totp.Issuer",
											"value": "elit irure sit dolore",
											"description": "Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI. Defaults to the service friendly name if not provided.",
											"disabled": true
										},
										{
											"key": "Totp.TimeStep",
											"value": "97338407",
											"description": "Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds",
											"disabled": true
										},
										{
											"key": "Totp.CodeLength",
											"value": "31733184",
											"description": "Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6",
											"disabled": true
										},
										{
											"key": "Totp.Skew",
											"value": "74283237",
											"description": "Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1",
											"disabled": true
										},
										{
											"key": "DefaultTemplateSid",
											"value": "HJeBC2c9a9c878daA8DdbF6EE94A75Fb0A",
											"description": "The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-Url}}/v2/Services",
									"host": [
										"{{v2-Services-Url}}"
									],
									"path": [
										"v2",
										"Services"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VA6aed4BFc5282bcBA76b4d5C8fA72Bb85\",\n  \"account_sid\": \"AC5ca58e8935786cB6ffC5AAd7B2FAD0cF\",\n  \"friendly_name\": \"nostrud officia do\",\n  \"code_length\": 79598635,\n  \"lookup_enabled\": true,\n  \"psd2_enabled\": true,\n  \"skip_sms_to_landlines\": false,\n  \"dtmf_input_required\": false,\n  \"tts_name\": \"dolore mollit sunt\",\n  \"do_not_share_warning_enabled\": true,\n  \"custom_code_enabled\": true,\n  \"push\": {},\n  \"totp\": {},\n  \"default_template_sid\": \"HJD8a2CfFaADdAAaEa2dE3D9eeaA39D7AA\",\n  \"date_created\": \"1989-12-31T19:01:00.905Z\",\n  \"date_updated\": \"1999-04-16T22:09:56.728Z\",\n  \"url\": \"http://wTSQBr.ajaV82f,tfLo1eLDE4aIKAcw+V1Il7QyjRcNND7SbWrnUfsye9GoDtuyVGUhuZZ9c98SBcR\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "List Service",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-Url}}/v2/Services",
							"host": [
								"{{v2-Services-Url}}"
							],
							"path": [
								"v2",
								"Services"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							]
						},
						"description": "Retrieve a list of all Verification Services for an account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-Url}}/v2/Services?PageSize=129",
									"host": [
										"{{v2-Services-Url}}"
									],
									"path": [
										"v2",
										"Services"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"services\": [\n    {\n      \"sid\": \"VAda5feA1afB3EdFAbdd8A5fb8BbAFC9F2\",\n      \"account_sid\": \"AC7A278Bbef81B17D30cA3b88Ecb9A9608\",\n      \"friendly_name\": \"officia\",\n      \"code_length\": 31033446,\n      \"lookup_enabled\": false,\n      \"psd2_enabled\": false,\n      \"skip_sms_to_landlines\": false,\n      \"dtmf_input_required\": false,\n      \"tts_name\": \"fugiat voluptate mollit eu\",\n      \"do_not_share_warning_enabled\": true,\n      \"custom_code_enabled\": true,\n      \"push\": {},\n      \"totp\": {},\n      \"default_template_sid\": \"HJaAE5EfFf5A8B98A3FcFFBb06AcE1E137\",\n      \"date_created\": \"1963-02-24T18:03:30.062Z\",\n      \"date_updated\": \"1978-05-09T19:54:08.214Z\",\n      \"url\": \"https://JJyqjKVVtUsf.ovqIIrmPa.DFvkv8HsUXGsxIO\",\n      \"links\": {}\n    },\n    {\n      \"sid\": \"VA5CCCF1Fb8Bf19D36E6bca3C7d267B3Ff\",\n      \"account_sid\": \"ACfDB2F7De3CAEabeAA886ab459cE2E587\",\n      \"friendly_name\": \"veniam consequat est\",\n      \"code_length\": -43433035,\n      \"lookup_enabled\": false,\n      \"psd2_enabled\": false,\n      \"skip_sms_to_landlines\": true,\n      \"dtmf_input_required\": true,\n      \"tts_name\": \"sit et nisi\",\n      \"do_not_share_warning_enabled\": false,\n      \"custom_code_enabled\": false,\n      \"push\": {},\n      \"totp\": {},\n      \"default_template_sid\": \"HJ25e1cD24D32cF94Bb45DAc805fdE2957\",\n      \"date_created\": \"1960-06-12T10:32:12.927Z\",\n      \"date_updated\": \"1959-09-04T08:47:46.133Z\",\n      \"url\": \"https://iRhGKWbSFqUGWDkvwlkoNqsUG.shOJMffOgII4In-O+rfTtquw.US+BcTo+OGRgVTZ\",\n      \"links\": {}\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://oTf.stOUlqNXFFsqzJ-emoTu7d5TZD3iat6.,usBanpoT13N8Mt1IeUHh.2\",\n    \"next_page_url\": \"http://bGLXfYf.ojL4Of3cng3alpWfmbasM-eACUmiv6pH3\",\n    \"page\": -22474620,\n    \"page_size\": -31134326,\n    \"previous_page_url\": \"https://NCBzKGDSsoTXCwJjpPJ.xxCyrdlsYV5yauXlmVLFeN7loN7uCXy,b.ZP38ZLgCTTtejAaTKpb+1DMZXDenaEuu5EpQOdsY2\",\n    \"url\": \"https://upyVagzLO.xjT9b93IJDpvCqOoAdhdrcER+-Q5e-UaNHhY-ks7kr0gmaOKmnjpGRP-ifhVRRC\",\n    \"key\": \"pariatur mollit qui\"\n  }\n}"
						}
					]
				},
				{
					"name": "Fetch Service",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
							"host": [
								"{{v2-Services-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":Sid"
							],
							"variable": [
								{
									"key": "Sid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Verification Service resource to fetch."
								}
							]
						},
						"description": "Fetch specific Verification Service Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
									"host": [
										"{{v2-Services-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":Sid"
									],
									"variable": [
										{
											"key": "Sid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Verification Service resource to fetch."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VA6aed4BFc5282bcBA76b4d5C8fA72Bb85\",\n  \"account_sid\": \"AC5ca58e8935786cB6ffC5AAd7B2FAD0cF\",\n  \"friendly_name\": \"nostrud officia do\",\n  \"code_length\": 79598635,\n  \"lookup_enabled\": true,\n  \"psd2_enabled\": true,\n  \"skip_sms_to_landlines\": false,\n  \"dtmf_input_required\": false,\n  \"tts_name\": \"dolore mollit sunt\",\n  \"do_not_share_warning_enabled\": true,\n  \"custom_code_enabled\": true,\n  \"push\": {},\n  \"totp\": {},\n  \"default_template_sid\": \"HJD8a2CfFaADdAAaEa2dE3D9eeaA39D7AA\",\n  \"date_created\": \"1989-12-31T19:01:00.905Z\",\n  \"date_updated\": \"1999-04-16T22:09:56.728Z\",\n  \"url\": \"http://wTSQBr.ajaV82f,tfLo1eLDE4aIKAcw+V1Il7QyjRcNND7SbWrnUfsye9GoDtuyVGUhuZZ9c98SBcR\",\n  \"links\": {}\n}"
						}
					]
				},
				{
					"name": "Delete Service",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
							"host": [
								"{{v2-Services-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":Sid"
							],
							"variable": [
								{
									"key": "Sid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Verification Service resource to delete."
								}
							]
						},
						"description": "Delete a specific Verification Service Instance."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
									"host": [
										"{{v2-Services-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":Sid"
									],
									"variable": [
										{
											"key": "Sid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Verification Service resource to delete."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Service",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FriendlyName",
									"value": "elit ex dolor",
									"description": "A descriptive string that you create to describe the verification service. It can be up to 30 characters long. **This value should not contain PII.**",
									"disabled": true
								},
								{
									"key": "CodeLength",
									"value": "12747759",
									"description": "The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.",
									"disabled": true
								},
								{
									"key": "LookupEnabled",
									"value": "false",
									"description": "Whether to perform a lookup with each verification started and return info about the phone number.",
									"disabled": true
								},
								{
									"key": "SkipSmsToLandlines",
									"value": "true",
									"description": "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
									"disabled": true
								},
								{
									"key": "DtmfInputRequired",
									"value": "false",
									"description": "Whether to ask the user to press a number before delivering the verify code in a phone call.",
									"disabled": true
								},
								{
									"key": "TtsName",
									"value": "pariatur aliqua",
									"description": "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
									"disabled": true
								},
								{
									"key": "Psd2Enabled",
									"value": "true",
									"description": "Whether to pass PSD2 transaction parameters when starting a verification.",
									"disabled": true
								},
								{
									"key": "DoNotShareWarningEnabled",
									"value": "true",
									"description": "Whether to add a privacy warning at the end of an SMS. **Disabled by default and applies only for SMS.**",
									"disabled": true
								},
								{
									"key": "CustomCodeEnabled",
									"value": "false",
									"description": "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
									"disabled": true
								},
								{
									"key": "Push.IncludeDate",
									"value": "true",
									"description": "Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter.",
									"disabled": true
								},
								{
									"key": "Push.ApnCredentialSid",
									"value": "CR0D54D3d5dfdDBcb4F6DC823Cf3bEB5e0",
									"description": "Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
									"disabled": true
								},
								{
									"key": "Push.FcmCredentialSid",
									"value": "CR6EAf7C864Af03aE9F00C392C7A5cDD30",
									"description": "Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
									"disabled": true
								},
								{
									"key": "Totp.Issuer",
									"value": "cillum consectetur eiusm",
									"description": "Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI.",
									"disabled": true
								},
								{
									"key": "Totp.TimeStep",
									"value": "-14730954",
									"description": "Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds",
									"disabled": true
								},
								{
									"key": "Totp.CodeLength",
									"value": "-33859748",
									"description": "Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6",
									"disabled": true
								},
								{
									"key": "Totp.Skew",
									"value": "-53346686",
									"description": "Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1",
									"disabled": true
								},
								{
									"key": "DefaultTemplateSid",
									"value": "HJ75F6F28cC61b41bb93ef9b08859B4efd",
									"description": "The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
							"host": [
								"{{v2-Services-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":Sid"
							],
							"variable": [
								{
									"key": "Sid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Service resource to update."
								}
							]
						},
						"description": "Update a specific Verification Service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FriendlyName",
											"value": "elit ex dolor",
											"description": "A descriptive string that you create to describe the verification service. It can be up to 30 characters long. **This value should not contain PII.**",
											"disabled": true
										},
										{
											"key": "CodeLength",
											"value": "12747759",
											"description": "The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.",
											"disabled": true
										},
										{
											"key": "LookupEnabled",
											"value": "false",
											"description": "Whether to perform a lookup with each verification started and return info about the phone number.",
											"disabled": true
										},
										{
											"key": "SkipSmsToLandlines",
											"value": "true",
											"description": "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
											"disabled": true
										},
										{
											"key": "DtmfInputRequired",
											"value": "false",
											"description": "Whether to ask the user to press a number before delivering the verify code in a phone call.",
											"disabled": true
										},
										{
											"key": "TtsName",
											"value": "pariatur aliqua",
											"description": "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
											"disabled": true
										},
										{
											"key": "Psd2Enabled",
											"value": "true",
											"description": "Whether to pass PSD2 transaction parameters when starting a verification.",
											"disabled": true
										},
										{
											"key": "DoNotShareWarningEnabled",
											"value": "true",
											"description": "Whether to add a privacy warning at the end of an SMS. **Disabled by default and applies only for SMS.**",
											"disabled": true
										},
										{
											"key": "CustomCodeEnabled",
											"value": "false",
											"description": "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
											"disabled": true
										},
										{
											"key": "Push.IncludeDate",
											"value": "true",
											"description": "Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter.",
											"disabled": true
										},
										{
											"key": "Push.ApnCredentialSid",
											"value": "CR0D54D3d5dfdDBcb4F6DC823Cf3bEB5e0",
											"description": "Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
											"disabled": true
										},
										{
											"key": "Push.FcmCredentialSid",
											"value": "CR6EAf7C864Af03aE9F00C392C7A5cDD30",
											"description": "Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)",
											"disabled": true
										},
										{
											"key": "Totp.Issuer",
											"value": "cillum consectetur eiusm",
											"description": "Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI.",
											"disabled": true
										},
										{
											"key": "Totp.TimeStep",
											"value": "-14730954",
											"description": "Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds",
											"disabled": true
										},
										{
											"key": "Totp.CodeLength",
											"value": "-33859748",
											"description": "Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6",
											"disabled": true
										},
										{
											"key": "Totp.Skew",
											"value": "-53346686",
											"description": "Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1",
											"disabled": true
										},
										{
											"key": "DefaultTemplateSid",
											"value": "HJ75F6F28cC61b41bb93ef9b08859B4efd",
											"description": "The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-Sid-Url}}/v2/Services/:Sid",
									"host": [
										"{{v2-Services-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":Sid"
									],
									"variable": [
										{
											"key": "Sid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Service resource to update."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VA6aed4BFc5282bcBA76b4d5C8fA72Bb85\",\n  \"account_sid\": \"AC5ca58e8935786cB6ffC5AAd7B2FAD0cF\",\n  \"friendly_name\": \"nostrud officia do\",\n  \"code_length\": 79598635,\n  \"lookup_enabled\": true,\n  \"psd2_enabled\": true,\n  \"skip_sms_to_landlines\": false,\n  \"dtmf_input_required\": false,\n  \"tts_name\": \"dolore mollit sunt\",\n  \"do_not_share_warning_enabled\": true,\n  \"custom_code_enabled\": true,\n  \"push\": {},\n  \"totp\": {},\n  \"default_template_sid\": \"HJD8a2CfFaADdAAaEa2dE3D9eeaA39D7AA\",\n  \"date_created\": \"1989-12-31T19:01:00.905Z\",\n  \"date_updated\": \"1999-04-16T22:09:56.728Z\",\n  \"url\": \"http://wTSQBr.ajaV82f,tfLo1eLDE4aIKAcw+V1Il7QyjRcNND7SbWrnUfsye9GoDtuyVGUhuZZ9c98SBcR\",\n  \"links\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "Verifications",
			"item": [
				{
					"name": "Create Verification",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "To",
									"value": "deserunt velit fugiat dolor sint",
									"description": "(Required) The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164)."
								},
								{
									"key": "Channel",
									"value": "in occaecat",
									"description": "(Required) The verification method to use. One of: [`email`](https://www.twilio.com/docs/verify/email), `sms`, `whatsapp`, `call`, or `sna`."
								},
								{
									"key": "CustomFriendlyName",
									"value": "commodo",
									"description": "A custom user defined friendly name that overwrites the existing one in the verification message",
									"disabled": true
								},
								{
									"key": "CustomMessage",
									"value": "dolore culpa Excepteur",
									"description": "The text of a custom message to use for the verification.",
									"disabled": true
								},
								{
									"key": "SendDigits",
									"value": "ut aliquip ipsum ullamco eu",
									"description": "The digits to send after a phone call is answered, for example, to dial an extension. For more information, see the Programmable Voice documentation of [sendDigits](https://www.twilio.com/docs/voice/twiml/number#attributes-sendDigits).",
									"disabled": true
								},
								{
									"key": "Locale",
									"value": "culpa qui dolor",
									"description": "Locale will automatically resolve based on phone number country code for SMS, WhatsApp and call channel verifications. This parameter will override the automatic locale. [See supported languages and more information here.](https://www.twilio.com/docs/verify/supported-languages).",
									"disabled": true
								},
								{
									"key": "CustomCode",
									"value": "laboris esse",
									"description": "A pre-generated code to use for verification. The code can be between 4 and 10 characters, inclusive.",
									"disabled": true
								},
								{
									"key": "Amount",
									"value": "non id eu ",
									"description": "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
									"disabled": true
								},
								{
									"key": "Payee",
									"value": "magna ullamco",
									"description": "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
									"disabled": true
								},
								{
									"key": "AppHash",
									"value": "qui non nostrud reprehenderit deserunt",
									"description": "Your [App Hash](https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string) to be appended at the end of your verification SMS body. Applies only to SMS. Example SMS body: `<#> Your AppName verification code is: 1234 He42w354ol9`.",
									"disabled": true
								},
								{
									"key": "TemplateSid",
									"value": "HJB79DbeAd0bbfC64bc96bF07a8DBA617f",
									"description": "The message [template](https://www.twilio.com/docs/verify/api/templates). If provided, will override the default template for the Service. SMS channel only.",
									"disabled": true
								},
								{
									"key": "TemplateCustomSubstitutions",
									"value": "magna consequat",
									"description": "A stringified JSON object in which the keys are the template's special variables and the values are the variables substitutions.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Verifications-Url}}/v2/Services/:ServiceSid/Verifications",
							"host": [
								"{{v2-Services-ServiceSid-Verifications-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Verifications"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under."
								}
							]
						},
						"description": "Create a new Verification using a Service"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "To",
											"value": "deserunt velit fugiat dolor sint",
											"description": "(Required) The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164)."
										},
										{
											"key": "Channel",
											"value": "in occaecat",
											"description": "(Required) The verification method to use. One of: [`email`](https://www.twilio.com/docs/verify/email), `sms`, `whatsapp`, `call`, or `sna`."
										},
										{
											"key": "CustomFriendlyName",
											"value": "commodo",
											"description": "A custom user defined friendly name that overwrites the existing one in the verification message",
											"disabled": true
										},
										{
											"key": "CustomMessage",
											"value": "dolore culpa Excepteur",
											"description": "The text of a custom message to use for the verification.",
											"disabled": true
										},
										{
											"key": "SendDigits",
											"value": "ut aliquip ipsum ullamco eu",
											"description": "The digits to send after a phone call is answered, for example, to dial an extension. For more information, see the Programmable Voice documentation of [sendDigits](https://www.twilio.com/docs/voice/twiml/number#attributes-sendDigits).",
											"disabled": true
										},
										{
											"key": "Locale",
											"value": "culpa qui dolor",
											"description": "Locale will automatically resolve based on phone number country code for SMS, WhatsApp and call channel verifications. This parameter will override the automatic locale. [See supported languages and more information here.](https://www.twilio.com/docs/verify/supported-languages).",
											"disabled": true
										},
										{
											"key": "CustomCode",
											"value": "laboris esse",
											"description": "A pre-generated code to use for verification. The code can be between 4 and 10 characters, inclusive.",
											"disabled": true
										},
										{
											"key": "Amount",
											"value": "non id eu ",
											"description": "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
											"disabled": true
										},
										{
											"key": "Payee",
											"value": "magna ullamco",
											"description": "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
											"disabled": true
										},
										{
											"key": "AppHash",
											"value": "qui non nostrud reprehenderit deserunt",
											"description": "Your [App Hash](https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string) to be appended at the end of your verification SMS body. Applies only to SMS. Example SMS body: `<#> Your AppName verification code is: 1234 He42w354ol9`.",
											"disabled": true
										},
										{
											"key": "TemplateSid",
											"value": "HJB79DbeAd0bbfC64bc96bF07a8DBA617f",
											"description": "The message [template](https://www.twilio.com/docs/verify/api/templates). If provided, will override the default template for the Service. SMS channel only.",
											"disabled": true
										},
										{
											"key": "TemplateCustomSubstitutions",
											"value": "magna consequat",
											"description": "A stringified JSON object in which the keys are the template's special variables and the values are the variables substitutions.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Verifications-Url}}/v2/Services/:ServiceSid/Verifications",
									"host": [
										"{{v2-Services-ServiceSid-Verifications-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Verifications"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VEEaCffeCe5eCa4e4331160d84aDa875A5\",\n  \"service_sid\": \"VAbD33FCEBCD7bcEcC9ab6ECB2aB7F5A2d\",\n  \"account_sid\": \"AC13d24BBb938612De985de2ED33ADCbbc\",\n  \"to\": \"aute\",\n  \"channel\": \"sna\",\n  \"status\": \"Ut amet\",\n  \"valid\": false,\n  \"lookup\": {},\n  \"amount\": \"elit commodo\",\n  \"payee\": \"ipsum reprehenderit elit\",\n  \"date_created\": \"1994-02-21T06:20:19.729Z\",\n  \"date_updated\": \"1981-06-12T13:05:04.198Z\",\n  \"sna\": {},\n  \"url\": \"https://AcllpiFZjaXZ.coowRS78bDrqAJ-Fl+iAexPAphPiMoj1miOt,pWueTiRs4JNBsjdTrFwjwNO\"\n}"
						}
					]
				},
				{
					"name": "Update Verification",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Status",
									"value": "approved",
									"description": "(Required) The new status of the resource. Can be: `canceled` or `approved`."
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Verifications-Sid-Url}}/v2/Services/:ServiceSid/Verifications/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Verifications-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Verifications",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to update the resource from."
								},
								{
									"key": "Sid",
									"value": "dolore",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Verification resource to update."
								}
							]
						},
						"description": "Update a Verification status"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Status",
											"value": "approved",
											"description": "(Required) The new status of the resource. Can be: `canceled` or `approved`."
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Verifications-Sid-Url}}/v2/Services/:ServiceSid/Verifications/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Verifications-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Verifications",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to update the resource from."
										},
										{
											"key": "Sid",
											"value": "dolore",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Verification resource to update."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VE2A4A6Cf0ad868D93acB9EdeB4eBc3bDB\",\n  \"service_sid\": \"VA8bFee07FfE88bb64cd3ddE4b38E54deD\",\n  \"account_sid\": \"ACD12eA30DeeeC7cEcB71fa97C776e74aB\",\n  \"to\": \"ullamco est dolor\",\n  \"channel\": \"sms\",\n  \"status\": \"elit\",\n  \"valid\": true,\n  \"lookup\": {},\n  \"amount\": \"anim ad\",\n  \"payee\": \"sit adipisicing et ullamco\",\n  \"date_created\": \"1987-03-29T18:59:38.394Z\",\n  \"date_updated\": \"1978-08-27T08:52:41.584Z\",\n  \"sna\": {},\n  \"url\": \"http://KxxegXvnIIDFVgOxuUXYuma.dklzxIZLrev0AJJ\"\n}"
						}
					]
				},
				{
					"name": "Fetch Verification",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Verifications-Sid-Url}}/v2/Services/:ServiceSid/Verifications/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Verifications-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Verifications",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to fetch the resource from."
								},
								{
									"key": "Sid",
									"value": "dolore",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Verification resource to fetch."
								}
							]
						},
						"description": "Fetch a specific Verification"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Verifications-Sid-Url}}/v2/Services/:ServiceSid/Verifications/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Verifications-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Verifications",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to fetch the resource from."
										},
										{
											"key": "Sid",
											"value": "dolore",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Verification resource to fetch."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VE2A4A6Cf0ad868D93acB9EdeB4eBc3bDB\",\n  \"service_sid\": \"VA8bFee07FfE88bb64cd3ddE4b38E54deD\",\n  \"account_sid\": \"ACD12eA30DeeeC7cEcB71fa97C776e74aB\",\n  \"to\": \"ullamco est dolor\",\n  \"channel\": \"sms\",\n  \"status\": \"elit\",\n  \"valid\": true,\n  \"lookup\": {},\n  \"amount\": \"anim ad\",\n  \"payee\": \"sit adipisicing et ullamco\",\n  \"date_created\": \"1987-03-29T18:59:38.394Z\",\n  \"date_updated\": \"1978-08-27T08:52:41.584Z\",\n  \"sna\": {},\n  \"url\": \"http://KxxegXvnIIDFVgOxuUXYuma.dklzxIZLrev0AJJ\"\n}"
						}
					]
				},
				{
					"name": "Create Verification Check",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Code",
									"value": "culp",
									"description": "The 4-10 character string being verified.",
									"disabled": true
								},
								{
									"key": "To",
									"value": "proident id",
									"description": "The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Either this parameter or the `verification_sid` must be specified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
									"disabled": true
								},
								{
									"key": "VerificationSid",
									"value": "VEAd81D61b63Cd3Babba06d8a5FA7DaBd0",
									"description": "A SID that uniquely identifies the Verification Check. Either this parameter or the `to` phone number/[email](https://www.twilio.com/docs/verify/email) must be specified.",
									"disabled": true
								},
								{
									"key": "Amount",
									"value": "mollit des",
									"description": "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
									"disabled": true
								},
								{
									"key": "Payee",
									"value": "consectetur non eiusmod aliqua",
									"description": "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-VerificationCheck-Url}}/v2/Services/:ServiceSid/VerificationCheck",
							"host": [
								"{{v2-Services-ServiceSid-VerificationCheck-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"VerificationCheck"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under."
								}
							]
						},
						"description": "challenge a specific Verification Check."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "Code",
											"value": "culp",
											"description": "The 4-10 character string being verified.",
											"disabled": true
										},
										{
											"key": "To",
											"value": "proident id",
											"description": "The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Either this parameter or the `verification_sid` must be specified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
											"disabled": true
										},
										{
											"key": "VerificationSid",
											"value": "VEAd81D61b63Cd3Babba06d8a5FA7DaBd0",
											"description": "A SID that uniquely identifies the Verification Check. Either this parameter or the `to` phone number/[email](https://www.twilio.com/docs/verify/email) must be specified.",
											"disabled": true
										},
										{
											"key": "Amount",
											"value": "mollit des",
											"description": "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
											"disabled": true
										},
										{
											"key": "Payee",
											"value": "consectetur non eiusmod aliqua",
											"description": "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-VerificationCheck-Url}}/v2/Services/:ServiceSid/VerificationCheck",
									"host": [
										"{{v2-Services-ServiceSid-VerificationCheck-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"VerificationCheck"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VE97f737b9f0F0F38E4b85F3FFacfF1320\",\n  \"service_sid\": \"VA72D93CaF3a9c4D64A1C1ca60BeaFD1Ba\",\n  \"account_sid\": \"ACbc4AAEacaadB0a0b1eFCD4A0Ba62Bec0\",\n  \"to\": \"cupidatat ad sit in in\",\n  \"channel\": \"sna\",\n  \"status\": \"proident eiusmod in\",\n  \"valid\": false,\n  \"amount\": \"quis ut\",\n  \"payee\": \"Dui\",\n  \"date_created\": \"2013-01-09T13:46:18.670Z\",\n  \"date_updated\": \"1944-05-28T11:24:10.312Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Attempts",
			"item": [
				{
					"name": "List Verification Attempt",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Attempts-Url}}/v2/Attempts",
							"host": [
								"{{v2-Attempts-Url}}"
							],
							"path": [
								"v2",
								"Attempts"
							],
							"query": [
								{
									"key": "DateCreatedAfter",
									"value": "1953-07-15T11:09:27.893Z",
									"description": "Datetime filter used to query Verification Attempts created after this datetime. Given as GMT in RFC 2822 format.",
									"disabled": true
								},
								{
									"key": "DateCreatedBefore",
									"value": "1953-07-15T11:09:27.893Z",
									"description": "Datetime filter used to query Verification Attempts created before this datetime. Given as GMT in RFC 2822 format.",
									"disabled": true
								},
								{
									"key": "ChannelData.To",
									"value": "dolore",
									"description": "Destination of a verification. It is phone number in E.164 format.",
									"disabled": true
								},
								{
									"key": "Country",
									"value": "dolore",
									"description": "Filter used to query Verification Attempts sent to the specified destination country.",
									"disabled": true
								},
								{
									"key": "Channel",
									"value": "email",
									"description": "Filter used to query Verification Attempts by communication channel. Valid values are `SMS` and `CALL`",
									"disabled": true
								},
								{
									"key": "VerifyServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "Filter used to query Verification Attempts by verify service. Only attempts of the provided SID will be returned.",
									"disabled": true
								},
								{
									"key": "VerificationSid",
									"value": "VEA7B7aCbe667BdE7Dc1B3Ef3Bc231b2dd",
									"description": "Filter used to return all the Verification Attempts of a single verification. Only attempts of the provided verification SID will be returned.",
									"disabled": true
								},
								{
									"key": "Status",
									"value": "unconverted",
									"description": "Filter used to query Verification Attempts by conversion status. Valid values are `UNCONVERTED`, for attempts that were not converted, and `CONVERTED`, for attempts that were confirmed.",
									"disabled": true
								},
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							]
						},
						"description": "List all the verification attempts for a given Account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Attempts-Url}}/v2/Attempts?DateCreatedAfter=1953-07-15T11:09:27.893Z&DateCreatedBefore=1953-07-15T11:09:27.893Z&ChannelData.To=dolore&Country=dolore&Channel=<string>&VerifyServiceSid=VABe6a3dBBA0a23BeFA365dbD87cD5A61c&VerificationSid=VEA7B7aCbe667BdE7Dc1B3Ef3Bc231b2dd&Status=<string>&PageSize=129",
									"host": [
										"{{v2-Attempts-Url}}"
									],
									"path": [
										"v2",
										"Attempts"
									],
									"query": [
										{
											"key": "DateCreatedAfter",
											"value": "1953-07-15T11:09:27.893Z"
										},
										{
											"key": "DateCreatedBefore",
											"value": "1953-07-15T11:09:27.893Z"
										},
										{
											"key": "ChannelData.To",
											"value": "dolore"
										},
										{
											"key": "Country",
											"value": "dolore"
										},
										{
											"key": "Channel",
											"value": "<string>"
										},
										{
											"key": "VerifyServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c"
										},
										{
											"key": "VerificationSid",
											"value": "VEA7B7aCbe667BdE7Dc1B3Ef3Bc231b2dd"
										},
										{
											"key": "Status",
											"value": "<string>"
										},
										{
											"key": "PageSize",
											"value": "129"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attempts\": [\n    {\n      \"sid\": \"VLB7A77fe4cddeDB75C423A68e89E2C6bd\",\n      \"account_sid\": \"ACe258EdCF8c6Cf189fDAcc8eAe4E8c30c\",\n      \"service_sid\": \"VAE0aA3Ef64d6BDFFd7BF1BdEe49eDd14B\",\n      \"verification_sid\": \"VEC3bf42E2Cbe052af80BE643c5dEBE238\",\n      \"date_created\": \"1966-07-06T14:33:08.352Z\",\n      \"date_updated\": \"1985-10-17T14:45:36.672Z\",\n      \"conversion_status\": \"<string>\",\n      \"channel\": \"<string>\",\n      \"price\": {},\n      \"channel_data\": {},\n      \"url\": \"http://lEXZaeIZXjnuFRmEVauoBUPa.rfemXOZtHOFl6svWXLb3qnlzxStJHsWLhxAdAQRquK3QVw\"\n    },\n    {\n      \"sid\": \"VL92813Bbc0b634FFbEe5A59b03bbAEDB8\",\n      \"account_sid\": \"ACE67AFF2fab8A1deA7fe36BD43d949D5c\",\n      \"service_sid\": \"VACaAbAaf02032ecA6CFb79aE935111891\",\n      \"verification_sid\": \"VE7F7a2BB4ff15AdD2e351F41ebaE3b2eb\",\n      \"date_created\": \"2015-03-22T08:49:55.980Z\",\n      \"date_updated\": \"1959-12-03T12:02:13.945Z\",\n      \"conversion_status\": \"<string>\",\n      \"channel\": \"<string>\",\n      \"price\": {},\n      \"channel_data\": {},\n      \"url\": \"http://YynfdpwqDczdIMiYxibGKrdYKnHay.cyFdSbhtMzko,UcuXlrvD4g6ub9AS\"\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://k.fvvE8ZHUxBKWn7zEHONO.m+T0SxcBawvhMzMJs5SiHXmwaGpdZx3BJggJNW.2H\",\n    \"next_page_url\": \"https://WfUqiFoVsULhUGpJOtNNwmVbCFG.inaogIUBRt\",\n    \"page\": -39886698,\n    \"page_size\": -86339326,\n    \"previous_page_url\": \"https://zNadmFEOpVpiyghmaCGQkJPGAxi.kpL0sn8Mna7YfMyMve7\",\n    \"url\": \"https://PeXKSvnIiSAiMZqVNPK.omgblPd5lPKvHPKCAM.d+vmwmRSn33pVNYl7e7NR9\",\n    \"key\": \"aliqua tempor commodo\"\n  }\n}"
						}
					]
				},
				{
					"name": "Fetch Verification Attempt",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Attempts-Sid-Url}}/v2/Attempts/:Sid",
							"host": [
								"{{v2-Attempts-Sid-Url}}"
							],
							"path": [
								"v2",
								"Attempts",
								":Sid"
							],
							"variable": [
								{
									"key": "Sid",
									"value": "VLB951ef106CD09abc020608855Ed348e7",
									"description": "(Required) The unique SID identifier of a Verification Attempt"
								}
							]
						},
						"description": "Fetch a specific verification attempt."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Attempts-Sid-Url}}/v2/Attempts/:Sid",
									"host": [
										"{{v2-Attempts-Sid-Url}}"
									],
									"path": [
										"v2",
										"Attempts",
										":Sid"
									],
									"variable": [
										{
											"key": "Sid",
											"value": "VLB951ef106CD09abc020608855Ed348e7",
											"description": "(Required) The unique SID identifier of a Verification Attempt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"VL9f64413f6067B77D32fb295a4D76a7fd\",\n  \"account_sid\": \"ACF5DADfEc7bc40DEc9aDfcfA39ff76e98\",\n  \"service_sid\": \"VA686F3d2688C7eD19FD58Fca1EbA41Fb5\",\n  \"verification_sid\": \"VE86EbcC7e9E1535BE6Dba8aFaaABEbaD1\",\n  \"date_created\": \"1988-12-18T15:44:53.664Z\",\n  \"date_updated\": \"1970-03-06T08:14:29.219Z\",\n  \"conversion_status\": \"<string>\",\n  \"channel\": \"<string>\",\n  \"price\": {},\n  \"channel_data\": {},\n  \"url\": \"http://YbCOyswmrgLkAsgTlMPRWVWGLfAESlFM.mpzdnSA\"\n}"
						}
					]
				},
				{
					"name": "Fetch Verification Attempts Summary",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Attempts-Summary-Url}}/v2/Attempts/Summary",
							"host": [
								"{{v2-Attempts-Summary-Url}}"
							],
							"path": [
								"v2",
								"Attempts",
								"Summary"
							],
							"query": [
								{
									"key": "VerifyServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "Filter used to consider only Verification Attempts of the given verify service on the summary aggregation.",
									"disabled": true
								},
								{
									"key": "DateCreatedAfter",
									"value": "1953-07-15T11:09:27.893Z",
									"description": "Datetime filter used to consider only Verification Attempts created after this datetime on the summary aggregation. Given as GMT in RFC 2822 format.",
									"disabled": true
								},
								{
									"key": "DateCreatedBefore",
									"value": "1953-07-15T11:09:27.893Z",
									"description": "Datetime filter used to consider only Verification Attempts created before this datetime on the summary aggregation. Given as GMT in RFC 2822 format.",
									"disabled": true
								},
								{
									"key": "Country",
									"value": "dolore",
									"description": "Filter used to consider only Verification Attempts sent to the specified destination country on the summary aggregation.",
									"disabled": true
								},
								{
									"key": "Channel",
									"value": "email",
									"description": "Filter Verification Attempts considered on the summary aggregation by communication channel. Valid values are `SMS` and `CALL`",
									"disabled": true
								},
								{
									"key": "DestinationPrefix",
									"value": "dolore",
									"description": "Filter the Verification Attempts considered on the summary aggregation by Destination prefix. It is the prefix of a phone number in E.164 format.",
									"disabled": true
								}
							]
						},
						"description": "Get a summary of how many attempts were made and how many were converted."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Attempts-Summary-Url}}/v2/Attempts/Summary?VerifyServiceSid=VABe6a3dBBA0a23BeFA365dbD87cD5A61c&DateCreatedAfter=1953-07-15T11:09:27.893Z&DateCreatedBefore=1953-07-15T11:09:27.893Z&Country=dolore&Channel=<string>&DestinationPrefix=dolore",
									"host": [
										"{{v2-Attempts-Summary-Url}}"
									],
									"path": [
										"v2",
										"Attempts",
										"Summary"
									],
									"query": [
										{
											"key": "VerifyServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c"
										},
										{
											"key": "DateCreatedAfter",
											"value": "1953-07-15T11:09:27.893Z"
										},
										{
											"key": "DateCreatedBefore",
											"value": "1953-07-15T11:09:27.893Z"
										},
										{
											"key": "Country",
											"value": "dolore"
										},
										{
											"key": "Channel",
											"value": "<string>"
										},
										{
											"key": "DestinationPrefix",
											"value": "dolore"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_attempts\": -77962884,\n  \"total_converted\": -27118152,\n  \"total_unconverted\": -98266849,\n  \"conversion_rate_percentage\": 54132273.54955956,\n  \"url\": \"https://zZWjNUNWkOCrGUTcZRTox.wijdKI9-vc-0qARORoqHFxbMR8xLzA+BVvR2qkkpkjke\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "List Verification Template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Templates-Url}}/v2/Templates",
							"host": [
								"{{v2-Templates-Url}}"
							],
							"path": [
								"v2",
								"Templates"
							],
							"query": [
								{
									"key": "FriendlyName",
									"value": "dolore",
									"description": "String filter used to query templates with a given friendly name",
									"disabled": true
								},
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							]
						},
						"description": "List all the available templates for a given Account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Templates-Url}}/v2/Templates?FriendlyName=dolore&PageSize=129",
									"host": [
										"{{v2-Templates-Url}}"
									],
									"path": [
										"v2",
										"Templates"
									],
									"query": [
										{
											"key": "FriendlyName",
											"value": "dolore"
										},
										{
											"key": "PageSize",
											"value": "129"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"templates\": [\n    {\n      \"sid\": \"HJ5afd4aaCA7Bd9bDCC6BF90c1438fe9A0\",\n      \"account_sid\": \"ACfB9bEF60f9564f4B3aAd7BBc86CF3D5b\",\n      \"friendly_name\": \"qui labore pariatur dolor\",\n      \"translations\": {}\n    },\n    {\n      \"sid\": \"HJ251d46FDdEeBAFfEd2bcc99bb582ADA7\",\n      \"account_sid\": \"ACD115754e00c65F441CcDC38c30d7BFc8\",\n      \"friendly_name\": \"amet\",\n      \"translations\": {}\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"https://RqOfEsUUWXOlUq.hakhEo30I6l7k5XIQF5jWnxP9PkMTDyAwqkc7\",\n    \"next_page_url\": \"http://fxZW.wdzbWHn4dy8Qx5qGHumb,nP-MqE\",\n    \"page\": -80102743,\n    \"page_size\": -50042019,\n    \"previous_page_url\": \"https://ZlTmkEteaLMFQPBoSHocpMfzkPFVpokCg.ynNgt6coVd2uQF4HQgzVA2Qa2Tbi,9A8zspUKGisY0nM83HVXywZy6TaPHMvjEs\",\n    \"url\": \"http://NpecOvcfJuctpzdryd.cjlkTsxFlvfZFB3wgn.wEkxSg5uVi4eM3xYZZF.PD,klwZ2Cmu-4j+2FfOoEif8hE\",\n    \"key\": \"esse fugiat\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Create Webhook",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FriendlyName",
									"value": "aute ad",
									"description": "(Required) The string that you assigned to describe the webhook. **This value should not contain PII.**"
								},
								{
									"key": "EventTypes",
									"value": "e",
									"description": "(Required) The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`"
								},
								{
									"key": "EventTypes",
									"value": "dolor et commodo",
									"description": "(Required) The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`"
								},
								{
									"key": "WebhookUrl",
									"value": "exercitation dolore ipsum in",
									"description": "(Required) The URL associated with this Webhook."
								},
								{
									"key": "Status",
									"value": "enabled",
									"description": "The webhook status. Default value is `enabled`. One of: `enabled` or `disabled`",
									"disabled": true
								},
								{
									"key": "Version",
									"value": "v1",
									"description": "The webhook version. Default value is `v2` which includes all the latest fields. Version `v1` is legacy and may be removed in the future.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Webhooks-Url}}/v2/Services/:ServiceSid/Webhooks",
							"host": [
								"{{v2-Services-ServiceSid-Webhooks-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Webhooks"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								}
							]
						},
						"description": "Create a new Webhook for the Service"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FriendlyName",
											"value": "magna reprehenderit occaecat non eiusmod",
											"description": "(Required) The string that you assigned to describe the webhook. **This value should not contain PII.**"
										},
										{
											"key": "EventTypes",
											"value": "irure pariatur",
											"description": "(Required) The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`"
										},
										{
											"key": "EventTypes",
											"value": "minim",
											"description": "(Required) The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`"
										},
										{
											"key": "WebhookUrl",
											"value": "proident dolor",
											"description": "(Required) The URL associated with this Webhook."
										},
										{
											"key": "Status",
											"value": "disabled",
											"description": "The webhook status. Default value is `enabled`. One of: `enabled` or `disabled`",
											"disabled": true
										},
										{
											"key": "Version",
											"value": "v1",
											"description": "The webhook version. Default value is `v2` which includes all the latest fields. Version `v1` is legacy and may be removed in the future.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Webhooks-Url}}/v2/Services/:ServiceSid/Webhooks",
									"host": [
										"{{v2-Services-ServiceSid-Webhooks-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Webhooks"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YW26acdCA1a20Bec4bBfb43D9C22C0eCdf\",\n  \"service_sid\": \"VAa20Bd9bD19deC6ceEebd8F6C043fa1F7\",\n  \"account_sid\": \"AC7dd7c1fe0D4EddFaad0ac00EcCEaD3Dd\",\n  \"friendly_name\": \"culpa consequat labore\",\n  \"event_types\": [\n    \"dolor cu\",\n    \"ea est dolor aliquip\"\n  ],\n  \"status\": \"disabled\",\n  \"version\": \"v2\",\n  \"webhook_url\": \"https://BHCxpDQ.cnLyPR4ojJUyqKDQH6i3Jx2OaBu.tzwhnJcr3Kz-7R5CdC89HJFjzhiM4Qd\",\n  \"webhook_method\": \"GET\",\n  \"date_created\": \"2007-12-27T16:22:01.986Z\",\n  \"date_updated\": \"1988-04-27T15:26:51.033Z\",\n  \"url\": \"http://PsYoBnUrNVgisVljyjvuFslBn.htKEo4kBz6Vp+KOtguMimHPyqgQNV0IRZOcP,HTxo2ga\"\n}"
						}
					]
				},
				{
					"name": "List Webhook",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Webhooks-Url}}/v2/Services/:ServiceSid/Webhooks",
							"host": [
								"{{v2-Services-ServiceSid-Webhooks-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Webhooks"
							],
							"query": [
								{
									"key": "PageSize",
									"value": "129",
									"description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								}
							]
						},
						"description": "Retrieve a list of all Webhooks for a Service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Webhooks-Url}}/v2/Services/:ServiceSid/Webhooks?PageSize=129",
									"host": [
										"{{v2-Services-ServiceSid-Webhooks-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Webhooks"
									],
									"query": [
										{
											"key": "PageSize",
											"value": "129"
										}
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"webhooks\": [\n    {\n      \"sid\": \"YWe47923ce2be1dF9c85b3dDCE27E7ea8b\",\n      \"service_sid\": \"VAe5e8EfFc3D9aFa0aac8144fAef1D9bCC\",\n      \"account_sid\": \"ACB3b1eacbC98D0BCC5cAFf2dBe187ECbd\",\n      \"friendly_name\": \"exercitation f\",\n      \"event_types\": [\n        \"Lorem\",\n        \"amet aute\"\n      ],\n      \"status\": \"enabled\",\n      \"version\": \"v1\",\n      \"webhook_url\": \"https://UUI.adK,bQyLOP,ZcZsDyfULE3YOGEv8gBHvKdqs4F-ZXFlvUZ4.JvlQ,\",\n      \"webhook_method\": \"GET\",\n      \"date_created\": \"1992-01-14T17:16:30.876Z\",\n      \"date_updated\": \"1963-10-09T23:44:03.828Z\",\n      \"url\": \"http://qvAzuRVSGFcSXzXsCWqckoeA.nhYF3BvDA9RczdROBv.tlhxgItOWwf5Jz7otFLkzxNnwx\"\n    },\n    {\n      \"sid\": \"YWeE42e72f069a934d38bbCaEECF62ec7E\",\n      \"service_sid\": \"VAdBbeadD4745f31Dc8AD98a1816fd91DD\",\n      \"account_sid\": \"AC7Af0858cFF39ECF7dF253d08A2CF074D\",\n      \"friendly_name\": \"cillum dolore\",\n      \"event_types\": [\n        \"in ad\",\n        \"incididunt commodo mollit nisi\"\n      ],\n      \"status\": \"enabled\",\n      \"version\": \"v1\",\n      \"webhook_url\": \"https://kYAFzTTBGQtf.yjJWX1SGQzp9RlNkzIi,20BqVc0+t\",\n      \"webhook_method\": \"GET\",\n      \"date_created\": \"2020-04-27T13:07:46.774Z\",\n      \"date_updated\": \"1945-07-30T22:26:46.921Z\",\n      \"url\": \"https://ihLKNqYTPeWFCeeawSghlXwQsxirU.xltky0OxDx2cA9kjrba9t.B8\"\n    }\n  ],\n  \"meta\": {\n    \"first_page_url\": \"http://GYtNNskEpAujlDdmddZSHzwpDK.pxumBtAQ\",\n    \"next_page_url\": \"http://fdcIFCCwYTB.uyipRVVb4gHZ8mqhNgE5WRqZeY++Lvz\",\n    \"page\": -15859375,\n    \"page_size\": 44571648,\n    \"previous_page_url\": \"http://AfCLyQpbLzffEComTRssG.lfA9Zvc4K-qd\",\n    \"url\": \"http://PVUPnBByicZXICcJchXcWQfUW.ahelws91wfb-VBWltaMkQe9T4Hp\",\n    \"key\": \"cillum qui officia\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Webhook",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "FriendlyName",
									"value": "culpa reprehe",
									"description": "The string that you assigned to describe the webhook. **This value should not contain PII.**",
									"disabled": true
								},
								{
									"key": "EventTypes",
									"value": "ut aliqua sed in laborum",
									"description": "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
									"disabled": true
								},
								{
									"key": "EventTypes",
									"value": "sunt officia",
									"description": "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
									"disabled": true
								},
								{
									"key": "WebhookUrl",
									"value": "Duis esse nulla ipsum in",
									"description": "The URL associated with this Webhook.",
									"disabled": true
								},
								{
									"key": "Status",
									"value": "disabled",
									"description": "The webhook status. Default value is `enabled`. One of: `enabled` or `disabled`",
									"disabled": true
								},
								{
									"key": "Version",
									"value": "v2",
									"description": "The webhook version. Default value is `v2` which includes all the latest fields. Version `v1` is legacy and may be removed in the future.",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Webhooks",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Sid",
									"value": "YW376eba8f19AADEA139d9406BC9928471",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to update."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "FriendlyName",
											"value": "qui minim incididunt",
											"description": "The string that you assigned to describe the webhook. **This value should not contain PII.**",
											"disabled": true
										},
										{
											"key": "EventTypes",
											"value": "qui Ut",
											"description": "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
											"disabled": true
										},
										{
											"key": "EventTypes",
											"value": "et do incididunt sint",
											"description": "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
											"disabled": true
										},
										{
											"key": "WebhookUrl",
											"value": "velit pariatur amet",
											"description": "The URL associated with this Webhook.",
											"disabled": true
										},
										{
											"key": "Status",
											"value": "disabled",
											"description": "The webhook status. Default value is `enabled`. One of: `enabled` or `disabled`",
											"disabled": true
										},
										{
											"key": "Version",
											"value": "v1",
											"description": "The webhook version. Default value is `v2` which includes all the latest fields. Version `v1` is legacy and may be removed in the future.",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Webhooks",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Sid",
											"value": "YW376eba8f19AADEA139d9406BC9928471",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to update."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YWeaB4De9DF2f38cCF6bd4CB3ceBD47809\",\n  \"service_sid\": \"VAA82432aBDeff5728cA3Fc0e96bfb0fc2\",\n  \"account_sid\": \"AC319CFDFfC0b0046E9Ed5c820de2bA4cF\",\n  \"friendly_name\": \"reprehenderit culpa\",\n  \"event_types\": [\n    \"commodo dolore anim fugiat\",\n    \"ut occaecat\"\n  ],\n  \"status\": \"disabled\",\n  \"version\": \"v2\",\n  \"webhook_url\": \"http://wXOjiqROHRegscpmoAb.ywsC8KO-1Bi-n\",\n  \"webhook_method\": \"POST\",\n  \"date_created\": \"2016-07-15T03:07:51.083Z\",\n  \"date_updated\": \"1944-12-14T17:07:01.628Z\",\n  \"url\": \"https://cLfrrjNhZPUtWngoCqxyqNuaoJc.qyupKH8ti7AqLM5nnH\"\n}"
						}
					]
				},
				{
					"name": "Delete Webhook",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Webhooks",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Sid",
									"value": "YW376eba8f19AADEA139d9406BC9928471",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to delete."
								}
							]
						},
						"description": "Delete a specific Webhook."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Webhooks",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Sid",
											"value": "YW376eba8f19AADEA139d9406BC9928471",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to delete."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Webhook",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{AccountSid}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{AuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
							"host": [
								"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
							],
							"path": [
								"v2",
								"Services",
								":ServiceSid",
								"Webhooks",
								":Sid"
							],
							"variable": [
								{
									"key": "ServiceSid",
									"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
									"description": "(Required) The unique SID identifier of the Service."
								},
								{
									"key": "Sid",
									"value": "YW376eba8f19AADEA139d9406BC9928471",
									"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to fetch."
								}
							]
						},
						"description": "Fetch a specific Webhook."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{v2-Services-ServiceSid-Webhooks-Sid-Url}}/v2/Services/:ServiceSid/Webhooks/:Sid",
									"host": [
										"{{v2-Services-ServiceSid-Webhooks-Sid-Url}}"
									],
									"path": [
										"v2",
										"Services",
										":ServiceSid",
										"Webhooks",
										":Sid"
									],
									"variable": [
										{
											"key": "ServiceSid",
											"value": "VABe6a3dBBA0a23BeFA365dbD87cD5A61c",
											"description": "(Required) The unique SID identifier of the Service."
										},
										{
											"key": "Sid",
											"value": "YW376eba8f19AADEA139d9406BC9928471",
											"description": "(Required) The Twilio-provided string that uniquely identifies the Webhook resource to fetch."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sid\": \"YWeaB4De9DF2f38cCF6bd4CB3ceBD47809\",\n  \"service_sid\": \"VAA82432aBDeff5728cA3Fc0e96bfb0fc2\",\n  \"account_sid\": \"AC319CFDFfC0b0046E9Ed5c820de2bA4cF\",\n  \"friendly_name\": \"reprehenderit culpa\",\n  \"event_types\": [\n    \"commodo dolore anim fugiat\",\n    \"ut occaecat\"\n  ],\n  \"status\": \"disabled\",\n  \"version\": \"v2\",\n  \"webhook_url\": \"http://wXOjiqROHRegscpmoAb.ywsC8KO-1Bi-n\",\n  \"webhook_method\": \"POST\",\n  \"date_created\": \"2016-07-15T03:07:51.083Z\",\n  \"date_updated\": \"1944-12-14T17:07:01.628Z\",\n  \"url\": \"https://cLfrrjNhZPUtWngoCqxyqNuaoJc.qyupKH8ti7AqLM5nnH\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{AuthToken}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{AccountSid}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-AccessTokens-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-AccessTokens-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-RateLimits-RateLimitSid-Buckets-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Challenges-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Challenges-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Factors-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Factors-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Forms-FormType-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-MessagingConfigurations-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-MessagingConfigurations-Country-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Entities-Identity-Challenges-ChallengeSid-Notifications-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-RateLimits-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-RateLimits-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Verifications-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Verifications-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Attempts-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Attempts-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Attempts-Summary-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-VerificationCheck-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Templates-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Webhooks-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		},
		{
			"key": "v2-Services-ServiceSid-Webhooks-Sid-Url",
			"value": "https://verify.twilio.com",
			"type": "string"
		}
	]
}